{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jaimi\\\\Desktop\\\\IN3007_Individual_Project\\\\movie-sentiment-app\\\\src\\\\components\\\\findSentimentPageComponents\\\\MovieDetails.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport MovieVisualisation from './MovieVisualisation';\nimport MoviePoster from '../MoviePoster';\nimport \"../../styles/FindSentimentStyles.css\";\nimport MovieTrailer from './MovieTrailer';\nimport moment from 'moment';\n\nclass MovieDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie_found: false,\n      movie_id: '',\n      movie_name: this.props.movieName,\n      movie_overview: '',\n      movie_release_date: '',\n      review_score: '',\n      twitter_positive_comments: '',\n      twitter_negative_comments: '',\n      twitter_neutral_comments: '',\n      youtube_positive_comments: '',\n      youtube_negative_comments: '',\n      youtube_neutral_comments: '',\n      see_or_skip: '',\n      date_analysed: ''\n    };\n  }\n\n  getMovieInformation(movieName) {\n    axios.get(\"https://api.themoviedb.org/3/search/movie\", {\n      params: {\n        api_key: '146fa0756d99220f8811aceb8a865301',\n        language: 'en-US',\n        query: movieName,\n        page: '1',\n        include_adult: 'false'\n      }\n    }).then(apiResponse => {\n      var reviewScore = \"\";\n\n      if (Number(apiResponse.data.results[0].vote_average) !== 0) {\n        reviewScore = apiResponse.data.results[0].vote_average;\n      } else {\n        reviewScore = \"No Reviews Yet\";\n      }\n\n      this.setState({\n        movie_id: apiResponse.data.results[0].id,\n        movie_name: apiResponse.data.results[0].title,\n        movie_overview: apiResponse.data.results[0].overview,\n        movie_release_date: apiResponse.data.results[0].release_date,\n        review_score: reviewScore\n      });\n      this.checkIfMovieAnalysed(this.state.movie_id);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  checkIfMovieAnalysed(movie_id) {\n    axios.get(\"http://localhost:5000/movieSentiment/findMovieSentiment/\" + movie_id).then(apiResponse => {\n      if (apiResponse.data !== null) {\n        if (moment().subtract(14, \"days\").startOf(\"day\").isBefore(apiResponse.data.date_analysed)) {\n          this.setState({\n            movie_found: true,\n            twitter_positive_comments: apiResponse.data.twitter_positive_comments,\n            twitter_negative_comments: apiResponse.data.twitter_negative_comments,\n            twitter_neutral_comments: apiResponse.data.twitter_neutral_comments,\n            youtube_positive_comments: apiResponse.data.youtube_positive_comments,\n            youtube_negative_comments: apiResponse.data.youtube_negative_comments,\n            youtube_neutral_comments: apiResponse.data.youtube_neutral_comments,\n            see_or_skip: apiResponse.data.see_or_skip,\n            date_analysed: apiResponse.data.date_analysed\n          });\n        } else {\n          this.findMovieSentiment(true);\n        }\n      } else {\n        this.findMovieSentiment(false);\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  findMovieSentiment(isUpdate) {\n    const api_url = \"http://127.0.0.1:5000/see-or-skip/get_sentiment\";\n    const data = JSON.stringify({\n      movie_name: this.state.movie_name\n    });\n    axios.post(api_url, data, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(apiResponse => {\n      this.setState({\n        twitter_positive_comments: apiResponse.data.twitter_positive_comments,\n        twitter_negative_comments: apiResponse.data.twitter_negative_comments,\n        twitter_neutral_comments: apiResponse.data.twitter_neutral_comments,\n        youtube_positive_comments: apiResponse.data.youtube_positive_comments,\n        youtube_negative_comments: apiResponse.data.youtube_negative_comments,\n        youtube_neutral_comments: apiResponse.data.youtube_neutral_comments,\n        date_analysed: new Date()\n      });\n      const totalPositive = Number(this.state.twitter_positive_comments) + Number(this.state.youtube_positive_comments);\n      const totalNegative = Number(this.state.twitter_negative_comments) + Number(this.state.youtube_negative_comments);\n\n      if (totalPositive > totalNegative) {\n        this.setState({\n          see_or_skip: \"See!\"\n        });\n      } else {\n        this.setState({\n          see_or_skip: \"Skip!\"\n        });\n      }\n\n      if (isUpdate) {\n        this.updateMovieSentiment();\n      } else {\n        this.addMovieSentimentToDatabase();\n      }\n    }).catch(error => {\n      console.log(error.response);\n    });\n  }\n\n  addMovieSentimentToDatabase() {\n    const api_url = \"http://localhost:5000/movieSentiment/saveMovieSentiment\";\n    const data = JSON.stringify({\n      movie_id: this.state.movie_id,\n      movie_name: this.state.movie_name,\n      release_date: this.state.movie_release_date,\n      twitter_positive_comments: this.state.twitter_positive_comments,\n      twitter_negative_comments: this.state.twitter_negative_comments,\n      twitter_neutral_comments: this.state.twitter_neutral_comments,\n      youtube_positive_comments: this.state.youtube_positive_comments,\n      youtube_negative_comments: this.state.youtube_negative_comments,\n      youtube_neutral_comments: this.state.youtube_neutral_comments,\n      see_or_skip: this.state.see_or_skip,\n      date_analysed: this.state.date_analysed\n    });\n    axios.post(api_url, data, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(apiResponse => console.log(apiResponse)).catch(error => {\n      console.log(error.response);\n    });\n  }\n\n  updateMovieSentiment() {\n    const api_url = \"http://localhost:5000/movieSentiment/updateMovieSentiment\";\n    const data = JSON.stringify({\n      movie_id: this.state.movie_id,\n      movie_name: this.state.movie_name,\n      release_date: this.state.movie_release_date,\n      twitter_positive_comments: this.state.twitter_positive_comments,\n      twitter_negative_comments: this.state.twitter_negative_comments,\n      twitter_neutral_comments: this.state.twitter_neutral_comments,\n      youtube_positive_comments: this.state.youtube_positive_comments,\n      youtube_negative_comments: this.state.youtube_negative_comments,\n      youtube_neutral_comments: this.state.youtube_neutral_comments,\n      see_or_skip: this.state.see_or_skip,\n      date_analysed: this.state.date_analysed\n    });\n    axios.post(api_url, data, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(apiResponse => console.log(apiResponse)).catch(error => {\n      console.log(error.response);\n    });\n  }\n\n  componentDidMount() {\n    this.getMovieInformation(this.state.movie_name);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"findSentimentResults\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, this.state.movie_name), React.createElement(\"div\", {\n      className: \"findSentimentMovieDetails\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movieArea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(MoviePoster, {\n      image_size: \"w342\",\n      movie_title: this.state.movie_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"movieInformation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, this.state.movie_overview), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Release Date: \", moment(this.state.movie_release_date).format(\"DD/MM/YYYY\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"Review Score: \", this.state.review_score), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"You should probably: \", this.state.see_or_skip)))), React.createElement(\"div\", {\n      className: \"movieTrailer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(MovieTrailer, {\n      movie_id: this.state.movie_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"visualisationArea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"visualisationSpacing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(MovieVisualisation, {\n      twitter_positive_comments: this.state.twitter_positive_comments,\n      twitter_negative_comments: this.state.twitter_negative_comments,\n      twitter_neutral_comments: this.state.twitter_neutral_comments,\n      youtube_positive_comments: this.state.youtube_positive_comments,\n      youtube_negative_comments: this.state.youtube_negative_comments,\n      youtube_neutral_comments: this.state.youtube_neutral_comments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default MovieDetails;","map":{"version":3,"sources":["C:/Users/Jaimi/Desktop/IN3007_Individual_Project/movie-sentiment-app/src/components/findSentimentPageComponents/MovieDetails.js"],"names":["React","axios","MovieVisualisation","MoviePoster","MovieTrailer","moment","MovieDetails","Component","constructor","props","state","movie_found","movie_id","movie_name","movieName","movie_overview","movie_release_date","review_score","twitter_positive_comments","twitter_negative_comments","twitter_neutral_comments","youtube_positive_comments","youtube_negative_comments","youtube_neutral_comments","see_or_skip","date_analysed","getMovieInformation","get","params","api_key","language","query","page","include_adult","then","apiResponse","reviewScore","Number","data","results","vote_average","setState","id","title","overview","release_date","checkIfMovieAnalysed","catch","error","console","log","subtract","startOf","isBefore","findMovieSentiment","isUpdate","api_url","JSON","stringify","post","headers","Date","totalPositive","totalNegative","updateMovieSentiment","addMovieSentimentToDatabase","response","componentDidMount","render","format"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport MovieVisualisation from './MovieVisualisation'\r\nimport MoviePoster from '../MoviePoster';\r\nimport \"../../styles/FindSentimentStyles.css\"\r\nimport MovieTrailer from './MovieTrailer';\r\nimport moment from 'moment';\r\n\r\nclass MovieDetails extends React.Component {\r\n   constructor(props) {\r\n     super(props)\r\n     this.state = {\r\n      movie_found: false,\r\n      movie_id: '',\r\n      movie_name : this.props.movieName,\r\n      movie_overview : '',\r\n      movie_release_date : '',\r\n      review_score : '',\r\n      twitter_positive_comments: '',\r\n      twitter_negative_comments: '',\r\n      twitter_neutral_comments: '',\r\n      youtube_positive_comments: '',\r\n      youtube_negative_comments: '',\r\n      youtube_neutral_comments: '',\r\n      see_or_skip: '',\r\n      date_analysed: ''\r\n     }\r\n   }\r\n\r\n    getMovieInformation(movieName) {\r\n      axios.get(\"https://api.themoviedb.org/3/search/movie\", {\r\n       params: {\r\n         api_key : '146fa0756d99220f8811aceb8a865301',\r\n         language : 'en-US',\r\n         query : movieName,\r\n         page : '1',\r\n         include_adult : 'false' \r\n       }\r\n     }).then(apiResponse => {\r\n        var reviewScore = \"\"\r\n\r\n       if (Number(apiResponse.data.results[0].vote_average) !== 0) {\r\n         reviewScore = apiResponse.data.results[0].vote_average\r\n       } else {\r\n        reviewScore = \"No Reviews Yet\"\r\n       }\r\n\r\n       this.setState({\r\n        movie_id : apiResponse.data.results[0].id,\r\n        movie_name : apiResponse.data.results[0].title,\r\n        movie_overview : apiResponse.data.results[0].overview,\r\n        movie_release_date : apiResponse.data.results[0].release_date,\r\n        review_score : reviewScore,\r\n       })\r\n       this.checkIfMovieAnalysed(this.state.movie_id)\r\n\r\n      })\r\n     .catch(error => {\r\n       console.log(error)\r\n     })\r\n    }\r\n\r\n    checkIfMovieAnalysed(movie_id) {\r\n      axios.get(\"http://localhost:5000/movieSentiment/findMovieSentiment/\" + movie_id)\r\n      .then(apiResponse => {\r\n        if (apiResponse.data !== null) {\r\n          if (moment().subtract(14, \"days\").startOf(\"day\").isBefore(apiResponse.data.date_analysed)) {\r\n            this.setState({\r\n              movie_found : true,\r\n              twitter_positive_comments: apiResponse.data.twitter_positive_comments,\r\n              twitter_negative_comments: apiResponse.data.twitter_negative_comments,\r\n              twitter_neutral_comments: apiResponse.data.twitter_neutral_comments,\r\n              youtube_positive_comments: apiResponse.data.youtube_positive_comments,\r\n              youtube_negative_comments: apiResponse.data.youtube_negative_comments,\r\n              youtube_neutral_comments: apiResponse.data.youtube_neutral_comments,\r\n              see_or_skip: apiResponse.data.see_or_skip,\r\n              date_analysed: apiResponse.data.date_analysed\r\n            })\r\n          } else {\r\n            this.findMovieSentiment(true)\r\n          }\r\n        } else {\r\n          this.findMovieSentiment(false)\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n    }\r\n\r\n    findMovieSentiment(isUpdate) {\r\n      const api_url = \"http://127.0.0.1:5000/see-or-skip/get_sentiment\"\r\n      const data = JSON.stringify({\r\n        movie_name : this.state.movie_name\r\n      })\r\n      axios.post(api_url, data ,{\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })  \r\n      .then(apiResponse => {  \r\n        this.setState({\r\n          twitter_positive_comments: apiResponse.data.twitter_positive_comments,\r\n          twitter_negative_comments: apiResponse.data.twitter_negative_comments,\r\n          twitter_neutral_comments : apiResponse.data.twitter_neutral_comments,\r\n          youtube_positive_comments: apiResponse.data.youtube_positive_comments,\r\n          youtube_negative_comments: apiResponse.data.youtube_negative_comments,\r\n          youtube_neutral_comments : apiResponse.data.youtube_neutral_comments,\r\n          date_analysed : new Date()\r\n        })\r\n\r\n        const totalPositive = Number(this.state.twitter_positive_comments) + Number(this.state.youtube_positive_comments)\r\n        const totalNegative = Number(this.state.twitter_negative_comments) + Number(this.state.youtube_negative_comments)\r\n\r\n        if (totalPositive > totalNegative) {\r\n          this.setState({\r\n            see_or_skip : \"See!\"\r\n          })\r\n        } else {\r\n          this.setState({\r\n            see_or_skip : \"Skip!\"\r\n          })\r\n        }\r\n\r\n        if (isUpdate) {\r\n          this.updateMovieSentiment()\r\n        } else {  \r\n          this.addMovieSentimentToDatabase()\r\n        }\r\n\r\n      })\r\n      .catch(error => {\r\n        console.log(error.response)\r\n      })\r\n    }\r\n\r\n    addMovieSentimentToDatabase() {\r\n      const api_url = \"http://localhost:5000/movieSentiment/saveMovieSentiment\"\r\n      const data = JSON.stringify({\r\n        movie_id : this.state.movie_id,\r\n        movie_name : this.state.movie_name,\r\n        release_date : this.state.movie_release_date,\r\n        twitter_positive_comments : this.state.twitter_positive_comments,\r\n        twitter_negative_comments : this.state.twitter_negative_comments,\r\n        twitter_neutral_comments : this.state.twitter_neutral_comments,\r\n        youtube_positive_comments : this.state.youtube_positive_comments,\r\n        youtube_negative_comments : this.state.youtube_negative_comments,\r\n        youtube_neutral_comments : this.state.youtube_neutral_comments,\r\n        see_or_skip : this.state.see_or_skip,\r\n        date_analysed : this.state.date_analysed\r\n      })\r\n      axios.post(api_url, data ,{\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })  \r\n      .then(apiResponse => console.log(apiResponse))\r\n      .catch(error => {\r\n        console.log(error.response)\r\n      })\r\n    }\r\n\r\n    updateMovieSentiment() {\r\n      const api_url = \"http://localhost:5000/movieSentiment/updateMovieSentiment\"\r\n      const data = JSON.stringify({\r\n        movie_id : this.state.movie_id,\r\n        movie_name : this.state.movie_name,\r\n        release_date : this.state.movie_release_date,\r\n        twitter_positive_comments : this.state.twitter_positive_comments,\r\n        twitter_negative_comments : this.state.twitter_negative_comments,\r\n        twitter_neutral_comments : this.state.twitter_neutral_comments,\r\n        youtube_positive_comments : this.state.youtube_positive_comments,\r\n        youtube_negative_comments : this.state.youtube_negative_comments,\r\n        youtube_neutral_comments : this.state.youtube_neutral_comments,\r\n        see_or_skip : this.state.see_or_skip,\r\n        date_analysed : this.state.date_analysed\r\n      })\r\n      axios.post(api_url, data ,{\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })  \r\n      .then(apiResponse => console.log(apiResponse))\r\n      .catch(error => {\r\n        console.log(error.response)\r\n      })\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.getMovieInformation(this.state.movie_name)\r\n    }\r\n\r\n   render() {\r\n     return (\r\n        <div>\r\n          <div className=\"findSentimentResults\">\r\n            <h3>{this.state.movie_name}</h3>\r\n            <div className=\"findSentimentMovieDetails\">\r\n              <div className=\"movieArea\">\r\n                <MoviePoster \r\n                  image_size={\"w342\"}\r\n                  movie_title={this.state.movie_name}\r\n                />\r\n                <div className=\"movieInformation\">\r\n                  <p>{this.state.movie_overview}</p>\r\n                  <p>Release Date: {moment(this.state.movie_release_date).format(\"DD/MM/YYYY\")}</p>\r\n                  <p>Review Score: {this.state.review_score}</p>\r\n                  <p>You should probably: {this.state.see_or_skip}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"movieTrailer\">\r\n              <MovieTrailer \r\n                movie_id={this.state.movie_id}\r\n              />\r\n            </div>\r\n            <div className=\"visualisationArea\">\r\n              <div className=\"visualisationSpacing\">\r\n                <MovieVisualisation\r\n                  twitter_positive_comments={this.state.twitter_positive_comments}\r\n                  twitter_negative_comments={this.state.twitter_negative_comments}\r\n                  twitter_neutral_comments={this.state.twitter_neutral_comments}\r\n                  youtube_positive_comments={this.state.youtube_positive_comments}\r\n                  youtube_negative_comments={this.state.youtube_negative_comments}\r\n                  youtube_neutral_comments={this.state.youtube_neutral_comments}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n       </div>\r\n     )\r\n   }\r\n}\r\n\r\nexport default MovieDetails;"]},"metadata":{},"sourceType":"module"}