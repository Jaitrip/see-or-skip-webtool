{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\Jaimi\\\\Desktop\\\\IN3007_Individual_Project\\\\movie-sentiment-app\\\\src\\\\components\\\\findSentimentPageComponents\\\\MovieTrailer.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport YouTube from \"react-youtube\";\n\nclass MovieTrailer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movieId: this.props.movie_id,\n      videoId: \"\"\n    };\n  }\n\n  getVideoID() {\n    if (this.state.movieId !== null) {\n      const apiUrl = \"http://api.themoviedb.org/3/movie/\" + this.state.movieId + \"/videos?api_key=146fa0756d99220f8811aceb8a865301\";\n      console.log(apiUrl);\n      axios.get(apiUrl).then(apiResponse => {\n        console.log(apiResponse);\n        this.setState({\n          videoId: apiResponse.data.results[0].key\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n\n  onReady(event) {\n    event.target.playVideo();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props !== prevProps) {\n      this.setState({\n        movieId: this.props.movie_id\n      });\n      this.getVideoID();\n    }\n  }\n\n  componentDidMount() {\n    this.getVideoID();\n  }\n\n  render() {\n    const options = {\n      height: '390',\n      width: '640',\n      playerVars: {\n        autoplay: 1\n      }\n    };\n\n    if (this.state.videoId !== \"\") {\n      return React.createElement(YouTube, {\n        videoId: this.state.videoId,\n        opts: options,\n        onReady: this.onReady,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Getting Trailer\");\n    }\n  }\n\n}\n\nexport default MovieTrailer;","map":{"version":3,"sources":["c:/Users/Jaimi/Desktop/IN3007_Individual_Project/movie-sentiment-app/src/components/findSentimentPageComponents/MovieTrailer.js"],"names":["React","axios","YouTube","MovieTrailer","Component","constructor","props","state","movieId","movie_id","videoId","getVideoID","apiUrl","console","log","get","then","apiResponse","setState","data","results","key","catch","error","onReady","event","target","playVideo","componentDidUpdate","prevProps","componentDidMount","render","options","height","width","playerVars","autoplay"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAG,KAAKF,KAAL,CAAWG,QADZ;AAETC,MAAAA,OAAO,EAAG;AAFD,KAAb;AAKH;;AAEDC,EAAAA,UAAU,GAAG;AACT,QAAI,KAAKJ,KAAL,CAAWC,OAAX,KAAuB,IAA3B,EAAiC;AAC7B,YAAMI,MAAM,GAAG,uCAAuC,KAAKL,KAAL,CAAWC,OAAlD,GAA4D,kDAA3E;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAX,MAAAA,KAAK,CAACc,GAAN,CAAUH,MAAV,EACCI,IADD,CACMC,WAAW,IAAI;AACjBJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,WAAZ;AACA,aAAKC,QAAL,CAAc;AACVR,UAAAA,OAAO,EAAGO,WAAW,CAACE,IAAZ,CAAiBC,OAAjB,CAAyB,CAAzB,EAA4BC;AAD5B,SAAd;AAGH,OAND,EAOCC,KAPD,CAOOC,KAAK,IAAI;AACZV,QAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ;AACH,OATD;AAUH;AACJ;;AAEDC,EAAAA,OAAO,CAACC,KAAD,EAAQ;AACXA,IAAAA,KAAK,CAACC,MAAN,CAAaC,SAAb;AACH;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B,QAAI,KAAKvB,KAAL,KAAeuB,SAAnB,EAA8B;AAC1B,WAAKX,QAAL,CAAc;AACVV,QAAAA,OAAO,EAAG,KAAKF,KAAL,CAAWG;AADX,OAAd;AAGA,WAAKE,UAAL;AACH;AACJ;;AAEDmB,EAAAA,iBAAiB,GAAG;AAChB,SAAKnB,UAAL;AACH;;AAEDoB,EAAAA,MAAM,GAAG;AACL,UAAMC,OAAO,GAAG;AACZC,MAAAA,MAAM,EAAE,KADI;AAEZC,MAAAA,KAAK,EAAE,KAFK;AAGZC,MAAAA,UAAU,EAAE;AACVC,QAAAA,QAAQ,EAAE;AADA;AAHA,KAAhB;;AAQA,QAAI,KAAK7B,KAAL,CAAWG,OAAX,KAAuB,EAA3B,EAA+B;AAC3B,aACI,oBAAC,OAAD;AACI,QAAA,OAAO,EAAE,KAAKH,KAAL,CAAWG,OADxB;AAEI,QAAA,IAAI,EAAEsB,OAFV;AAGI,QAAA,OAAO,EAAE,KAAKR,OAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAOH,KARD,MAQO;AACH,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ;AAGH;AACJ;;AAlEsC;;AAqE3C,eAAerB,YAAf","sourcesContent":["import React from \"react\"\r\nimport axios from \"axios\"\r\nimport YouTube from \"react-youtube\"\r\n\r\nclass MovieTrailer extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            movieId : this.props.movie_id,\r\n            videoId : \"\"\r\n            \r\n        }\r\n    }\r\n\r\n    getVideoID() {\r\n        if (this.state.movieId !== null) {\r\n            const apiUrl = \"http://api.themoviedb.org/3/movie/\" + this.state.movieId + \"/videos?api_key=146fa0756d99220f8811aceb8a865301\"\r\n            console.log(apiUrl)\r\n            axios.get(apiUrl)\r\n            .then(apiResponse => {\r\n                console.log(apiResponse)\r\n                this.setState({\r\n                    videoId : apiResponse.data.results[0].key\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n        }\r\n    }\r\n\r\n    onReady(event) {\r\n        event.target.playVideo()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props !== prevProps) {\r\n            this.setState({\r\n                movieId : this.props.movie_id\r\n            })\r\n            this.getVideoID()\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getVideoID();\r\n    }\r\n\r\n    render() {\r\n        const options = {\r\n            height: '390',\r\n            width: '640',\r\n            playerVars: {\r\n              autoplay: 1\r\n            }\r\n        }\r\n\r\n        if (this.state.videoId !== \"\") {\r\n            return (\r\n                <YouTube \r\n                    videoId={this.state.videoId}\r\n                    opts={options}\r\n                    onReady={this.onReady} \r\n                />\r\n            )\r\n        } else {\r\n            return (\r\n                <h3>Getting Trailer</h3>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MovieTrailer"]},"metadata":{},"sourceType":"module"}