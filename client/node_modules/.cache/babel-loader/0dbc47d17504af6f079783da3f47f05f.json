{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jaimi\\\\Desktop\\\\IN3007_Individual_Project\\\\movie-sentiment-app\\\\src\\\\components\\\\homePageComponents\\\\HomePageMovies.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport CondensedMovieView from \"./CondensedMovieView\";\nimport \"../../styles/HomePageStyles.css\";\n\nclass HomePageMovies extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      upcomingMovies: \"\"\n    };\n  }\n\n  sortByDate(firstMovie, secondMovie) {\n    return moment(firstMovie.release_date).format(\"DD/MM/YYYY\") - moment(secondMovie.release_date).format(\"DD/MM/YYYY\");\n  }\n\n  getUpcomingMovies() {\n    axios.get(\"http://localhost:5000/movieSentiment/findMovieSentiment/\").then(apiResponse => {\n      const movieReleaseLimit = new Date(new Date().getFullYear(), new Date().getMonth() - 1, new Date().getDate());\n      const sorted_movies = apiResponse.data.sort(this.sortByDate);\n      const upcomingMovies = sorted_movies.filter(function (movie) {\n        return movie.release_date > movieReleaseLimit.toISOString();\n      });\n      this.setState({\n        upcomingMovies: upcomingMovies.slice(0, 5)\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  componentDidMount() {\n    this.getUpcomingMovies();\n  }\n\n  render() {\n    if (this.state.upcomingMovies !== \"\") {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"rowDisplay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(CondensedMovieView, {\n        movieName: this.state.upcomingMovies[0].movie_name,\n        releaseDate: this.state.upcomingMovies[0].release_date,\n        seeOrSkip: this.state.upcomingMovies[0].see_or_skip,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(CondensedMovieView, {\n        movieName: this.state.upcomingMovies[1].movie_name,\n        releaseDate: this.state.upcomingMovies[1].release_date,\n        seeOrSkip: this.state.upcomingMovies[1].see_or_skip,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(CondensedMovieView, {\n        movieName: this.state.upcomingMovies[2].movie_name,\n        releaseDate: this.state.upcomingMovies[2].release_date,\n        seeOrSkip: this.state.upcomingMovies[2].see_or_skip,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(CondensedMovieView, {\n        movieName: this.state.upcomingMovies[3].movie_name,\n        releaseDate: this.state.upcomingMovies[3].release_date,\n        seeOrSkip: this.state.upcomingMovies[3].see_or_skip,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(CondensedMovieView, {\n        movieName: this.state.upcomingMovies[4].movie_name,\n        releaseDate: this.state.upcomingMovies[4].release_date,\n        seeOrSkip: this.state.upcomingMovies[4].see_or_skip,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Getting Upcoming Movies!\"));\n    }\n  }\n\n}\n\nexport default HomePageMovies;","map":{"version":3,"sources":["C:/Users/Jaimi/Desktop/IN3007_Individual_Project/movie-sentiment-app/src/components/homePageComponents/HomePageMovies.js"],"names":["React","axios","moment","CondensedMovieView","HomePageMovies","Component","constructor","props","state","upcomingMovies","sortByDate","firstMovie","secondMovie","release_date","format","getUpcomingMovies","get","then","apiResponse","movieReleaseLimit","Date","getFullYear","getMonth","getDate","sorted_movies","data","sort","filter","movie","toISOString","setState","slice","catch","error","console","log","componentDidMount","render","movie_name","see_or_skip"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport axios from \"axios\"\r\nimport moment from \"moment\"\r\nimport CondensedMovieView from \"./CondensedMovieView\"\r\nimport \"../../styles/HomePageStyles.css\"\r\n\r\nclass HomePageMovies extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            upcomingMovies : \"\"\r\n        }\r\n    }\r\n\r\n    sortByDate(firstMovie, secondMovie) {\r\n        return moment(firstMovie.release_date).format(\"DD/MM/YYYY\") - (moment(secondMovie.release_date).format(\"DD/MM/YYYY\"))\r\n    }\r\n\r\n    getUpcomingMovies() {\r\n        axios.get(\"http://localhost:5000/movieSentiment/findMovieSentiment/\")\r\n        .then(apiResponse => {\r\n\r\n            const movieReleaseLimit = new Date(new Date().getFullYear(), new Date().getMonth() - 1, new Date().getDate());\r\n            const sorted_movies = apiResponse.data.sort(this.sortByDate)\r\n\r\n            const upcomingMovies = sorted_movies.filter(function(movie) {\r\n                return movie.release_date > movieReleaseLimit.toISOString()\r\n            })\r\n\r\n            this.setState({\r\n                upcomingMovies : upcomingMovies.slice(0, 5)\r\n            })\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getUpcomingMovies()\r\n    }\r\n\r\n    render() {\r\n        if (this.state.upcomingMovies !== \"\") {\r\n            return (\r\n                <div>\r\n                    <div className=\"rowDisplay\">\r\n                        <CondensedMovieView \r\n                            movieName={this.state.upcomingMovies[0].movie_name}\r\n                            releaseDate={this.state.upcomingMovies[0].release_date}\r\n                            seeOrSkip={this.state.upcomingMovies[0].see_or_skip}\r\n                        />\r\n\r\n                        <CondensedMovieView     \r\n                            movieName={this.state.upcomingMovies[1].movie_name}\r\n                            releaseDate={this.state.upcomingMovies[1].release_date}\r\n                            seeOrSkip={this.state.upcomingMovies[1].see_or_skip}\r\n                        />\r\n\r\n                        <CondensedMovieView \r\n                            movieName={this.state.upcomingMovies[2].movie_name}\r\n                            releaseDate={this.state.upcomingMovies[2].release_date}\r\n                            seeOrSkip={this.state.upcomingMovies[2].see_or_skip}\r\n                        />\r\n\r\n                        <CondensedMovieView \r\n                            movieName={this.state.upcomingMovies[3].movie_name}\r\n                            releaseDate={this.state.upcomingMovies[3].release_date}\r\n                            seeOrSkip={this.state.upcomingMovies[3].see_or_skip}\r\n                        />\r\n\r\n                        <CondensedMovieView \r\n                            movieName={this.state.upcomingMovies[4].movie_name}\r\n                            releaseDate={this.state.upcomingMovies[4].release_date}\r\n                            seeOrSkip={this.state.upcomingMovies[4].see_or_skip}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <h2>Getting Upcoming Movies!</h2>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default HomePageMovies;\r\n"]},"metadata":{},"sourceType":"module"}