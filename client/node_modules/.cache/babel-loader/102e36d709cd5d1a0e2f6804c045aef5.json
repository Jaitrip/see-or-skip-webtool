{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\Jaimi\\\\Desktop\\\\IN3007_Individual_Project\\\\movie-sentiment-app\\\\src\\\\components\\\\MovieDetails.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport MovieVisualisation from './MovieVisualisation';\nimport MoviePoster from './MoviePoster';\nimport \"../styles/FindSentimentStyles.css\";\n\nclass MovieDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie_found: false,\n      movie_id: '',\n      movie_name: this.props.movieName,\n      movie_overview: '',\n      movie_release_date: '',\n      poster_path: '',\n      positive_comments: '',\n      negative_comments: '',\n      neutral_comments: '',\n      see_or_skip: '',\n      date_analysed: ''\n    };\n  }\n\n  getMovieInformation(movieName) {\n    axios.get(\"https://api.themoviedb.org/3/search/movie\", {\n      params: {\n        api_key: '146fa0756d99220f8811aceb8a865301',\n        language: 'en-US',\n        query: movieName,\n        page: '1',\n        include_adult: 'false'\n      }\n    }).then(apiResponse => {\n      this.setState({\n        movie_id: apiResponse.data.results[0].id,\n        movie_name: apiResponse.data.results[0].title,\n        movie_overview: apiResponse.data.results[0].overview,\n        movie_release_date: apiResponse.data.results[0].release_date,\n        poster_path: apiResponse.data.results[0].poster_path\n      });\n      this.checkIfMovieAnalysed(this.state.movie_id);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  checkIfMovieAnalysed(movie_id) {\n    axios.get(\"http://localhost:5000/movieSentiment/findMovieSentiment/\" + movie_id).then(apiResponse => {\n      if (apiResponse.data !== null) {\n        this.setState({\n          movie_found: true,\n          positive_comments: apiResponse.data.positive_comments,\n          negative_comments: apiResponse.data.negative_comments,\n          neutral_comments: apiResponse.data.neutral_comments,\n          see_or_skip: apiResponse.data.see_or_skip,\n          date_analysed: apiResponse.data.date_analysed\n        });\n      } else {\n        this.findMovieSentiment(this.state.movieName);\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  findMovieSentiment() {\n    const api_url = \"http://127.0.0.1:5000/see-or-skip/get_sentiment_classification\";\n    const data = JSON.stringify({\n      movie_name: this.state.movie_name\n    });\n    axios.post(api_url, data, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(apiResponse => {\n      if (Number(apiResponse.data.positive_comments) > Number(apiResponse.data.negative_comments)) {\n        this.setState({\n          positive_comments: apiResponse.data.positive_comments,\n          negative_comments: apiResponse.data.negative_comments,\n          neutral_comments: apiResponse.data.neutral_comments,\n          see_or_skip: \"See!\",\n          date_analysed: new Date()\n        });\n        console.log(\"see\");\n      } else {\n        this.setState({\n          positive_comments: apiResponse.data.positive_comments,\n          negative_comments: apiResponse.data.negative_comments,\n          neutral_comments: apiResponse.data.neutral_comments,\n          see_or_skip: \"Skip!\",\n          date_analysed: new Date()\n        });\n      }\n\n      this.addMovieSentimentToDatabase();\n    }).catch(error => {\n      console.log(error.response);\n    });\n  }\n\n  addMovieSentimentToDatabase() {\n    const api_url = \"http://localhost:5000/movieSentiment/saveMovieSentiment\";\n    const data = JSON.stringify({\n      movie_id: this.state.movie_id,\n      movie_name: this.state.movie_name,\n      release_date: this.state.movie_release_date,\n      positive_comments: this.state.positive_comments,\n      negative_comments: this.state.negative_comments,\n      neutral_comments: this.state.neutral_comments,\n      see_or_skip: this.state.see_or_skip,\n      date_analysed: this.state.date_analysed\n    });\n    axios.post(api_url, data, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(apiResponse => console.log(apiResponse)).catch(error => {\n      console.log(error.response);\n    });\n  }\n\n  componentDidMount() {\n    this.getMovieInformation(this.state.movie_name);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"This is what people think about:\"), React.createElement(\"div\", {\n      className: \"findSentimentResults\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, this.state.movie_name)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(MoviePoster, {\n      image_size: \"w185\",\n      poster_path: this.state.poster_path,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, this.state.movie_overview), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Release Date: \", this.state.movie_release_date), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"You should probably: \", this.state.see_or_skip))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(MovieVisualisation, {\n      date_analysed: this.state.date_analysed,\n      positive_comments: this.state.positive_comments,\n      negative_comments: this.state.negative_comments,\n      neutral_comments: this.state.neutral_comments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default MovieDetails;","map":{"version":3,"sources":["c:/Users/Jaimi/Desktop/IN3007_Individual_Project/movie-sentiment-app/src/components/MovieDetails.js"],"names":["React","axios","MovieVisualisation","MoviePoster","MovieDetails","Component","constructor","props","state","movie_found","movie_id","movie_name","movieName","movie_overview","movie_release_date","poster_path","positive_comments","negative_comments","neutral_comments","see_or_skip","date_analysed","getMovieInformation","get","params","api_key","language","query","page","include_adult","then","apiResponse","setState","data","results","id","title","overview","release_date","checkIfMovieAnalysed","catch","error","console","log","findMovieSentiment","api_url","JSON","stringify","post","headers","Number","Date","addMovieSentimentToDatabase","response","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport MovieVisualisation from './MovieVisualisation'\r\nimport MoviePoster from './MoviePoster';\r\nimport \"../styles/FindSentimentStyles.css\"\r\n\r\nclass MovieDetails extends React.Component {\r\n   constructor(props) {\r\n     super(props)\r\n     this.state = {\r\n      movie_found: false,\r\n      movie_id: '',\r\n      movie_name : this.props.movieName,\r\n      movie_overview : '',\r\n      movie_release_date : '',\r\n      poster_path : '',\r\n      positive_comments: '',\r\n      negative_comments: '',\r\n      neutral_comments: '',\r\n      see_or_skip: '',\r\n      date_analysed: ''\r\n     }\r\n   }\r\n\r\n    getMovieInformation(movieName) {\r\n      axios.get(\"https://api.themoviedb.org/3/search/movie\", {\r\n       params: {\r\n         api_key : '146fa0756d99220f8811aceb8a865301',\r\n         language : 'en-US',\r\n         query : movieName,\r\n         page : '1',\r\n         include_adult : 'false' \r\n       }\r\n     }).then(apiResponse => {\r\n       this.setState({\r\n        movie_id : apiResponse.data.results[0].id,\r\n        movie_name : apiResponse.data.results[0].title,\r\n        movie_overview : apiResponse.data.results[0].overview,\r\n        movie_release_date : apiResponse.data.results[0].release_date,\r\n        poster_path : apiResponse.data.results[0].poster_path\r\n       })\r\n       this.checkIfMovieAnalysed(this.state.movie_id)\r\n\r\n      })\r\n     .catch(error => {\r\n       console.log(error)\r\n     })\r\n    }\r\n\r\n    checkIfMovieAnalysed(movie_id) {\r\n      axios.get(\"http://localhost:5000/movieSentiment/findMovieSentiment/\" + movie_id)\r\n      .then(apiResponse => {\r\n        if (apiResponse.data !== null) {\r\n          this.setState({\r\n            movie_found : true,\r\n            positive_comments: apiResponse.data.positive_comments,\r\n            negative_comments: apiResponse.data.negative_comments,\r\n            neutral_comments: apiResponse.data.neutral_comments,\r\n            see_or_skip: apiResponse.data.see_or_skip,\r\n            date_analysed: apiResponse.data.date_analysed\r\n          })\r\n        } else {\r\n          this.findMovieSentiment(this.state.movieName)\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n    }\r\n\r\n    findMovieSentiment() {\r\n      const api_url = \"http://127.0.0.1:5000/see-or-skip/get_sentiment_classification\"\r\n      const data = JSON.stringify({\r\n        movie_name : this.state.movie_name\r\n      })\r\n      axios.post(api_url, data ,{\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })  \r\n      .then(apiResponse => { \r\n        if ((Number(apiResponse.data.positive_comments)) > (Number(apiResponse.data.negative_comments))) {\r\n          this.setState({\r\n            positive_comments: apiResponse.data.positive_comments,\r\n            negative_comments: apiResponse.data.negative_comments,\r\n            neutral_comments : apiResponse.data.neutral_comments,\r\n            see_or_skip : \"See!\",\r\n            date_analysed : new Date()\r\n          })\r\n          console.log(\"see\")\r\n        } else {\r\n          this.setState({\r\n            positive_comments: apiResponse.data.positive_comments,\r\n            negative_comments: apiResponse.data.negative_comments,\r\n            neutral_comments : apiResponse.data.neutral_comments,\r\n            see_or_skip : \"Skip!\",\r\n            date_analysed : new Date()\r\n          })\r\n        }\r\n        this.addMovieSentimentToDatabase()\r\n      })\r\n      .catch(error => {\r\n        console.log(error.response)\r\n      })\r\n    }\r\n\r\n    addMovieSentimentToDatabase() {\r\n      const api_url = \"http://localhost:5000/movieSentiment/saveMovieSentiment\"\r\n      const data = JSON.stringify({\r\n        movie_id : this.state.movie_id,\r\n        movie_name : this.state.movie_name,\r\n        release_date : this.state.movie_release_date,\r\n        positive_comments : this.state.positive_comments,\r\n        negative_comments : this.state.negative_comments,\r\n        neutral_comments : this.state.neutral_comments,\r\n        see_or_skip : this.state.see_or_skip,\r\n        date_analysed : this.state.date_analysed\r\n      })\r\n      axios.post(api_url, data ,{\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })  \r\n      .then(apiResponse => console.log(apiResponse))\r\n      .catch(error => {\r\n        console.log(error.response)\r\n      })\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.getMovieInformation(this.state.movie_name)\r\n    }\r\n\r\n   render() {\r\n     return (\r\n        <div>\r\n          <h1>This is what people think about:</h1>\r\n          <div className=\"findSentimentResults\">\r\n            <div>\r\n              <h2>{this.state.movie_name}</h2>\r\n            </div>\r\n            <div>\r\n              <div>\r\n                <MoviePoster \r\n                  image_size={\"w185\"}\r\n                  poster_path={this.state.poster_path}\r\n                />\r\n              </div>\r\n              <div>\r\n                <h5>{this.state.movie_overview}</h5>\r\n                <h5>Release Date: {this.state.movie_release_date}</h5>\r\n                <h5>You should probably: {this.state.see_or_skip}</h5>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <MovieVisualisation\r\n                date_analysed={this.state.date_analysed}\r\n                positive_comments={this.state.positive_comments}\r\n                negative_comments={this.state.negative_comments}\r\n                neutral_comments={this.state.neutral_comments}\r\n              />\r\n            </div>\r\n          </div>\r\n       </div>\r\n     )\r\n   }\r\n}\r\n\r\nexport default MovieDetails;"]},"metadata":{},"sourceType":"module"}