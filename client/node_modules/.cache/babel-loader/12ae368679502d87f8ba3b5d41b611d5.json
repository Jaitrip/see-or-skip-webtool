{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\Jaimi\\\\Desktop\\\\IN3007_Individual_Project\\\\movie-sentiment-app\\\\src\\\\components\\\\comparePageComponents\\\\MovieInformation.js\";\nimport React from 'react';\nimport MoviePoster from '../MoviePoster.js';\nimport axios from 'axios';\nimport MovieTrailer from '../findSentimentPageComponents/MovieTrailer.js';\n\nclass MovieInformation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movieId: \"\",\n      movieName: this.props.movieName,\n      movieOverview: \"\",\n      movieReleaseDate: \"\",\n      posterPath: '',\n      twitterPositiveComments: '',\n      twitterNegativeComments: '',\n      twitterNeutralComments: '',\n      youtubePositiveComments: '',\n      youtubeNegativeComments: '',\n      youtubeNeutralComments: '',\n      seeOrSkip: '',\n      dateAnalysed: ''\n    };\n  }\n\n  getMovieInformation() {\n    axios.get(\"https://api.themoviedb.org/3/search/movie\", {\n      params: {\n        api_key: '146fa0756d99220f8811aceb8a865301',\n        language: 'en-US',\n        query: this.state.movieName,\n        page: '1',\n        include_adult: 'false'\n      }\n    }).then(apiResponse => {\n      this.setState({\n        movieId: apiResponse.data.results[0].id,\n        movieName: apiResponse.data.results[0].title,\n        movieOverview: apiResponse.data.results[0].overview,\n        movieReleaseDate: apiResponse.data.results[0].release_date,\n        posterPath: apiResponse.data.results[0].poster_path\n      });\n      this.getMovieSentiment();\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  getMovieSentiment() {\n    axios.get(\"http://localhost:5000/movieSentiment/findMovieSentiment/\" + this.state.movieId).then(apiResponse => {\n      if (apiResponse.data !== null) {\n        this.setState({\n          twitterPositiveComments: apiResponse.data.twitter_positive_comments,\n          twitterNegativeComments: apiResponse.data.twitter_negative_comments,\n          twitterNeutralComments: apiResponse.data.twitter_neutral_comments,\n          youtubePositiveComments: apiResponse.data.youtube_positive_comments,\n          youtubeNegativeComments: apiResponse.data.youtube_negative_comments,\n          youtubeNeutralComments: apiResponse.data.youtube_neutral_comments,\n          seeOrSkip: apiResponse.data.see_or_skip,\n          dateAnalysed: apiResponse.data.date_analysed\n        });\n      }\n\n      this.props.handler(this.state.twitterPositiveComments, this.state.twitterNegativeComments, this.state.twitterNeutralComments, this.state.youtubePositiveComments, this.state.youtubeNegativeComments, this.state.youtubeNeutralComments);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  componentDidMount() {\n    this.getMovieInformation();\n  }\n\n  render() {\n    if (this.state.release_date !== \"\") {\n      const release_date = this.state.release_date.split(\"-\");\n      const formatted_release_date = release_date[2] + \"/\" + release_date[1] + \"/\" + release_date[0];\n      this.setState({\n        release_date: formatted_release_date\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movieArea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(MoviePoster, {\n      image_size: \"w185\",\n      poster_path: this.state.posterPath,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"movieInformation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.state.movieName), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, this.state.movieOverview), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Release Date: \", this.state.release_date), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"See or Skip?: \", this.state.seeOrSkip))), React.createElement(MovieTrailer, {\n      movie_id: this.state.movieId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default MovieInformation;","map":{"version":3,"sources":["c:/Users/Jaimi/Desktop/IN3007_Individual_Project/movie-sentiment-app/src/components/comparePageComponents/MovieInformation.js"],"names":["React","MoviePoster","axios","MovieTrailer","MovieInformation","Component","constructor","props","state","movieId","movieName","movieOverview","movieReleaseDate","posterPath","twitterPositiveComments","twitterNegativeComments","twitterNeutralComments","youtubePositiveComments","youtubeNegativeComments","youtubeNeutralComments","seeOrSkip","dateAnalysed","getMovieInformation","get","params","api_key","language","query","page","include_adult","then","apiResponse","setState","data","results","id","title","overview","release_date","poster_path","getMovieSentiment","catch","error","console","log","twitter_positive_comments","twitter_negative_comments","twitter_neutral_comments","youtube_positive_comments","youtube_negative_comments","youtube_neutral_comments","see_or_skip","date_analysed","handler","componentDidMount","render","split","formatted_release_date"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport MoviePoster from '../MoviePoster.js'\r\nimport axios from 'axios'\r\nimport MovieTrailer from '../findSentimentPageComponents/MovieTrailer.js'\r\n\r\nclass MovieInformation extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            movieId : \"\",\r\n            movieName : this.props.movieName,\r\n            movieOverview : \"\",\r\n            movieReleaseDate : \"\",\r\n            posterPath : '',\r\n            twitterPositiveComments: '',\r\n            twitterNegativeComments: '',\r\n            twitterNeutralComments: '',\r\n            youtubePositiveComments: '',\r\n            youtubeNegativeComments: '',\r\n            youtubeNeutralComments: '',\r\n            seeOrSkip: '',\r\n            dateAnalysed: ''\r\n        }\r\n    }\r\n\r\n    getMovieInformation() {\r\n        axios.get(\"https://api.themoviedb.org/3/search/movie\", {\r\n            params: {\r\n                api_key : '146fa0756d99220f8811aceb8a865301',\r\n                language : 'en-US',\r\n                query : this.state.movieName,\r\n                page : '1',\r\n                include_adult : 'false' \r\n            }\r\n        })\r\n        .then(apiResponse => {\r\n            this.setState({\r\n                movieId : apiResponse.data.results[0].id,\r\n                movieName : apiResponse.data.results[0].title,\r\n                movieOverview : apiResponse.data.results[0].overview,\r\n                movieReleaseDate : apiResponse.data.results[0].release_date,\r\n                posterPath : apiResponse.data.results[0].poster_path,\r\n            })\r\n            this.getMovieSentiment()\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    getMovieSentiment() {\r\n        axios.get(\"http://localhost:5000/movieSentiment/findMovieSentiment/\" + this.state.movieId)\r\n        .then(apiResponse => {\r\n            if (apiResponse.data !== null) {\r\n                this.setState({\r\n                    twitterPositiveComments: apiResponse.data.twitter_positive_comments,\r\n                    twitterNegativeComments: apiResponse.data.twitter_negative_comments,\r\n                    twitterNeutralComments: apiResponse.data.twitter_neutral_comments,\r\n                    youtubePositiveComments: apiResponse.data.youtube_positive_comments,\r\n                    youtubeNegativeComments: apiResponse.data.youtube_negative_comments,\r\n                    youtubeNeutralComments: apiResponse.data.youtube_neutral_comments,\r\n                    seeOrSkip: apiResponse.data.see_or_skip,\r\n                    dateAnalysed: apiResponse.data.date_analysed\r\n                })\r\n            }\r\n            this.props.handler(this.state.twitterPositiveComments, this.state.twitterNegativeComments, this.state.twitterNeutralComments, this.state.youtubePositiveComments, this.state.youtubeNegativeComments, this.state.youtubeNeutralComments) \r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getMovieInformation()\r\n    }\r\n\r\n    render() {\r\n        \r\n        if (this.state.release_date !== \"\") {\r\n            const release_date = this.state.release_date.split(\"-\")\r\n            const formatted_release_date = release_date[2] + \"/\" + release_date[1] + \"/\" + release_date[0]\r\n\r\n            this.setState({\r\n                release_date : formatted_release_date\r\n            })\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"movieArea\">\r\n                    <MoviePoster \r\n                        image_size={\"w185\"}\r\n                        poster_path={this.state.posterPath}\r\n                    />\r\n                    <div className=\"movieInformation\">\r\n                        <h3>{this.state.movieName}</h3>\r\n                        <p>{this.state.movieOverview}</p>\r\n                        <p>Release Date: {this.state.release_date}</p>\r\n                        <p>See or Skip?: {this.state.seeOrSkip}</p>\r\n                    </div>\r\n                </div>\r\n                <MovieTrailer \r\n                    movie_id={this.state.movieId}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovieInformation;"]},"metadata":{},"sourceType":"module"}