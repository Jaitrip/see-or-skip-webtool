{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\Jaimi\\\\Desktop\\\\IN3007_Individual_Project\\\\movie-sentiment-app\\\\src\\\\components\\\\MovieVisualisation.js\";\nimport React from 'react';\nimport axios from 'axios';\n\nclass MovieVisualisation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie_found: false,\n      movie_id: '',\n      movie_name: this.props.movieName,\n      movie_overview: '',\n      movie_release_date: '',\n      positive_comments: '',\n      negative_comments: '',\n      neutral_comments: '',\n      see_or_skip: '',\n      date_analysed: ''\n    };\n  }\n\n  getMovieInformation(movieName) {\n    axios.get(\"https://api.themoviedb.org/3/search/movie\", {\n      params: {\n        api_key: '146fa0756d99220f8811aceb8a865301',\n        language: 'en-US',\n        query: movieName,\n        page: '1',\n        include_adult: 'false'\n      }\n    }).then(apiResponse => {\n      this.setState({\n        movie_id: apiResponse.data.results[0].id,\n        movie_name: apiResponse.data.results[0].title,\n        movie_overview: apiResponse.data.results[0].overview,\n        movie_release_date: apiResponse.data.results[0].release_date\n      });\n      this.checkIfMovieAnalysed(this.state.movie_id);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  checkIfMovieAnalysed(movie_id) {\n    axios.get(\"http://localhost:5000/movieSentiment/findMovieSentiment/\" + movie_id).then(apiResponse => {\n      if (apiResponse.data !== null) {\n        this.setState({\n          movie_found: true,\n          positive_comments: apiResponse.data.positive_comments,\n          negative_comments: apiResponse.data.negative_comments,\n          neutral_comments: apiResponse.data.neutral_comments,\n          see_or_skip: apiResponse.data.see_or_skip,\n          date_analysed: apiResponse.data.date_analysed\n        });\n      } else {\n        this.findMovieSentiment(this.state.movieName);\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  findMovieSentiment(request_movie_name) {\n    axios.post(\"http://127.0.0.1:5000/see-or-skip/get_sentiment_classification\", {\n      movie_name: request_movie_name\n    }, {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n      }\n    }).then(apiResponse => {\n      if (parseInt(apiResponse.data.positive_comments) > parseInt(apiResponse.negative_comments)) {\n        this.setState({\n          positive_comments: apiResponse.data.positive_comments,\n          negative_comments: apiResponse.data.negative_comments,\n          neutral_comments: apiResponse.data.neutral_comments,\n          see_or_skip: \"See!\",\n          date_analysed: new Date()\n        });\n      } else {\n        this.setState({\n          positive_comments: apiResponse.data.positive_comments,\n          negative_comments: apiResponse.data.negative_comments,\n          neutral_comments: apiResponse.data.neutral_comments,\n          see_or_skip: \"Skip!\",\n          date_analysed: new Date()\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  addMovieSentimentToDatabase() {\n    axios.post(\"http://localhost:5000/movieSentiment/saveMovieSentiment\", {\n      movie_id: this.state.movie_id,\n      movie_name: this.state.movieName,\n      release_date: this.state.movie_release_date,\n      positive_comments: this.state.positive_comments,\n      negative_comments: this.state.negative_comments,\n      neutral_comments: this.state.negative_comments,\n      see_or_skip: this.state.see_or_skip,\n      date_analysed: this.state.date_analysed\n    }).then(apiResponse => console.log(apiResponse)).catch(error => {\n      console.log(error);\n    });\n  }\n\n  componentDidMount() {\n    this.getMovieInformation(this.state.movie_name);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"This is what people think about:\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, this.state.movie_name), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, this.state.movie_overview), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Release Date: \", this.state.movie_release_date), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Positive Comments: \", this.state.positive_comments), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Negative Comments: \", this.state.negative_comments), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Neutral Comments: \", this.state.neutral_comments), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, this.state.see_or_skip));\n  }\n\n}\n\nexport default MovieVisualisation;","map":{"version":3,"sources":["c:/Users/Jaimi/Desktop/IN3007_Individual_Project/movie-sentiment-app/src/components/MovieVisualisation.js"],"names":["React","axios","MovieVisualisation","Component","constructor","props","state","movie_found","movie_id","movie_name","movieName","movie_overview","movie_release_date","positive_comments","negative_comments","neutral_comments","see_or_skip","date_analysed","getMovieInformation","get","params","api_key","language","query","page","include_adult","then","apiResponse","setState","data","results","id","title","overview","release_date","checkIfMovieAnalysed","catch","error","console","log","findMovieSentiment","request_movie_name","post","headers","parseInt","Date","addMovieSentimentToDatabase","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass MovieVisualisation extends React.Component {\r\n   constructor(props) {\r\n     super(props)\r\n     this.state = {\r\n      movie_found: false,\r\n      movie_id: '',\r\n      movie_name : this.props.movieName,\r\n      movie_overview : '',\r\n      movie_release_date : '',\r\n      positive_comments: '',\r\n      negative_comments: '',\r\n      neutral_comments: '',\r\n      see_or_skip: '',\r\n      date_analysed: ''\r\n     }\r\n   }\r\n\r\n    getMovieInformation(movieName) {\r\n      axios.get(\"https://api.themoviedb.org/3/search/movie\", {\r\n       params: {\r\n         api_key : '146fa0756d99220f8811aceb8a865301',\r\n         language : 'en-US',\r\n         query : movieName,\r\n         page : '1',\r\n         include_adult : 'false' \r\n       }\r\n     }).then(apiResponse => {\r\n       this.setState({\r\n        movie_id : apiResponse.data.results[0].id,\r\n        movie_name : apiResponse.data.results[0].title,\r\n        movie_overview : apiResponse.data.results[0].overview,\r\n        movie_release_date : apiResponse.data.results[0].release_date\r\n       })\r\n       this.checkIfMovieAnalysed(this.state.movie_id)\r\n\r\n      })\r\n     .catch(error => {\r\n       console.log(error)\r\n     })\r\n    }\r\n\r\n    checkIfMovieAnalysed(movie_id) {\r\n      axios.get(\"http://localhost:5000/movieSentiment/findMovieSentiment/\" + movie_id)\r\n      .then(apiResponse => {\r\n        if (apiResponse.data !== null) {\r\n          this.setState({\r\n            movie_found : true,\r\n            positive_comments: apiResponse.data.positive_comments,\r\n            negative_comments: apiResponse.data.negative_comments,\r\n            neutral_comments: apiResponse.data.neutral_comments,\r\n            see_or_skip: apiResponse.data.see_or_skip,\r\n            date_analysed: apiResponse.data.date_analysed\r\n          })\r\n        } else {\r\n          this.findMovieSentiment(this.state.movieName)\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n    }\r\n\r\n    findMovieSentiment(request_movie_name) {\r\n      axios.post(\"http://127.0.0.1:5000/see-or-skip/get_sentiment_classification\", {\r\n        movie_name : request_movie_name\r\n      }, {\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\r\n        }\r\n      })\r\n      .then(apiResponse => { \r\n        if (parseInt(apiResponse.data.positive_comments) > parseInt(apiResponse.negative_comments)) {\r\n          this.setState({\r\n            positive_comments: apiResponse.data.positive_comments,\r\n            negative_comments: apiResponse.data.negative_comments,\r\n            neutral_comments : apiResponse.data.neutral_comments,\r\n            see_or_skip : \"See!\",\r\n            date_analysed : new Date()\r\n          })\r\n        } else {\r\n          this.setState({\r\n            positive_comments: apiResponse.data.positive_comments,\r\n            negative_comments: apiResponse.data.negative_comments,\r\n            neutral_comments : apiResponse.data.neutral_comments,\r\n            see_or_skip : \"Skip!\",\r\n            date_analysed : new Date()\r\n          })\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n    }\r\n\r\n    addMovieSentimentToDatabase() {\r\n      axios.post(\"http://localhost:5000/movieSentiment/saveMovieSentiment\", {\r\n        movie_id : this.state.movie_id,\r\n        movie_name : this.state.movieName,\r\n        release_date : this.state.movie_release_date,\r\n        positive_comments : this.state.positive_comments,\r\n        negative_comments : this.state.negative_comments,\r\n        neutral_comments : this.state.negative_comments,\r\n        see_or_skip : this.state.see_or_skip,\r\n        date_analysed : this.state.date_analysed\r\n      })\r\n      .then(apiResponse => console.log(apiResponse))\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.getMovieInformation(this.state.movie_name)\r\n    }\r\n\r\n   render() {\r\n     return (\r\n       <div>\r\n        <h1>This is what people think about:</h1>\r\n        <h2>{this.state.movie_name}</h2>\r\n        <h3>{this.state.movie_overview}</h3>\r\n        <h3>Release Date: {this.state.movie_release_date}</h3>\r\n        <h3>Positive Comments: {this.state.positive_comments}</h3>\r\n        <h3>Negative Comments: {this.state.negative_comments}</h3>\r\n        <h3>Neutral Comments: {this.state.neutral_comments}</h3>\r\n        <h3>{this.state.see_or_skip}</h3>\r\n       </div>\r\n     )\r\n   }\r\n}\r\n\r\nexport default MovieVisualisation;"]},"metadata":{},"sourceType":"module"}