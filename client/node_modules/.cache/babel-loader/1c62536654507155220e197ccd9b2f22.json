{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jaimi\\\\Desktop\\\\IN3007_Individual_Project\\\\movie-sentiment-app\\\\src\\\\components\\\\comparePageComponents\\\\CompareMovieVisualisation.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\n\nclass CompareMovieVisualisation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      labels: [\"Positive\", \"Neutral\", \"Negative\"],\n      datasets: [{\n        label: this.props.firstMovieName,\n        backgroundColor: 'rgba(179,181,198,0.2)',\n        borderColor: 'rgba(179,181,198,1)',\n        pointBackgroundColor: 'rgba(179,181,198,1)',\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgba(179,181,198,1)',\n        data: this.props.firstMovieSentiment\n      }, {\n        label: this.props.secondMovieName,\n        backgroundColor: 'rgba(255,99,132,0.2)',\n        borderColor: 'rgba(255,99,132,1)',\n        pointBackgroundColor: 'rgba(255,99,132,1)',\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgba(255,99,132,1)',\n        data: this.props.secondMovieSentiment\n      }]\n    };\n  } // save changes passed to the component in the state\n\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      this.setState({\n        datasets: [{\n          label: this.props.firstMovieName,\n          backgroundColor: 'rgba(179,181,198,0.2)',\n          borderColor: 'rgba(179,181,198,1)',\n          pointBackgroundColor: 'rgba(179,181,198,1)',\n          pointBorderColor: '#fff',\n          pointHoverBackgroundColor: '#fff',\n          pointHoverBorderColor: 'rgba(179,181,198,1)',\n          data: this.props.firstMovieSentiment\n        }, {\n          label: this.props.secondMovieName,\n          backgroundColor: 'rgba(255,99,132,0.2)',\n          borderColor: 'rgba(255,99,132,1)',\n          pointBackgroundColor: 'rgba(255,99,132,1)',\n          pointBorderColor: '#fff',\n          pointHoverBackgroundColor: '#fff',\n          pointHoverBorderColor: 'rgba(255,99,132,1)',\n          data: this.props.secondMovieSentiment\n        }]\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Line, {\n      data: {\n        labels: this.state.labels,\n        datasets: this.state.datasets\n      },\n      width: 600,\n      height: 300,\n      options: {\n        maintainAspectRatio: false,\n        scales: {\n          xAxes: [{\n            display: true,\n            gridLines: {\n              display: true,\n              color: \"rgba(255, 255, 255, 0.5)\"\n            },\n            scaleLabel: {\n              display: true,\n              labelString: 'Sentiment'\n            }\n          }],\n          yAxes: [{\n            display: true,\n            gridLines: {\n              display: true,\n              color: \"rgba(255, 255, 255, 0.5)\"\n            },\n            scaleLabel: {\n              display: true,\n              labelString: 'Value'\n            }\n          }]\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default CompareMovieVisualisation;","map":{"version":3,"sources":["C:/Users/Jaimi/Desktop/IN3007_Individual_Project/movie-sentiment-app/src/components/comparePageComponents/CompareMovieVisualisation.js"],"names":["React","Line","CompareMovieVisualisation","Component","constructor","props","state","labels","datasets","label","firstMovieName","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","data","firstMovieSentiment","secondMovieName","secondMovieSentiment","componentDidUpdate","prevProps","setState","render","maintainAspectRatio","scales","xAxes","display","gridLines","color","scaleLabel","labelString","yAxes"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nclass CompareMovieVisualisation extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            labels : [\"Positive\",\"Neutral\", \"Negative\"],\r\n            datasets : [\r\n                {\r\n                    label: this.props.firstMovieName,\r\n                    backgroundColor: 'rgba(179,181,198,0.2)',\r\n                    borderColor: 'rgba(179,181,198,1)',\r\n                    pointBackgroundColor: 'rgba(179,181,198,1)',\r\n                    pointBorderColor: '#fff',\r\n                    pointHoverBackgroundColor: '#fff',\r\n                    pointHoverBorderColor: 'rgba(179,181,198,1)',\r\n                    data : this.props.firstMovieSentiment\r\n                },\r\n\r\n                {\r\n                    label: this.props.secondMovieName,\r\n                    backgroundColor: 'rgba(255,99,132,0.2)',\r\n                    borderColor: 'rgba(255,99,132,1)',\r\n                    pointBackgroundColor: 'rgba(255,99,132,1)',\r\n                    pointBorderColor: '#fff',\r\n                    pointHoverBackgroundColor: '#fff',\r\n                    pointHoverBorderColor: 'rgba(255,99,132,1)',\r\n                    data : this.props.secondMovieSentiment\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    // save changes passed to the component in the state\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps !== this.props) {\r\n            this.setState({\r\n                datasets : [\r\n                    {\r\n                        label: this.props.firstMovieName,\r\n                        backgroundColor: 'rgba(179,181,198,0.2)',\r\n                        borderColor: 'rgba(179,181,198,1)',\r\n                        pointBackgroundColor: 'rgba(179,181,198,1)',\r\n                        pointBorderColor: '#fff',\r\n                        pointHoverBackgroundColor: '#fff',\r\n                        pointHoverBorderColor: 'rgba(179,181,198,1)',\r\n                        data : this.props.firstMovieSentiment\r\n                    },\r\n    \r\n                    {\r\n                        label: this.props.secondMovieName,\r\n                        backgroundColor: 'rgba(255,99,132,0.2)',\r\n                        borderColor: 'rgba(255,99,132,1)',\r\n                        pointBackgroundColor: 'rgba(255,99,132,1)',\r\n                        pointBorderColor: '#fff',\r\n                        pointHoverBackgroundColor: '#fff',\r\n                        pointHoverBorderColor: 'rgba(255,99,132,1)',\r\n                        data : this.props.secondMovieSentiment\r\n                    }\r\n                ]\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Line\r\n                    data={{\r\n                        labels : this.state.labels,\r\n                        datasets : this.state.datasets\r\n                    }}\r\n                        width={600}\r\n                        height={300}\r\n                        options={{ \r\n                            maintainAspectRatio: false,\r\n                            scales: {\r\n                                xAxes: [{\r\n                                  display: true,\r\n                                  gridLines: {\r\n                                    display: true,\r\n                                    color: \"rgba(255, 255, 255, 0.5)\"\r\n                                  },\r\n                                  scaleLabel: {\r\n                                    display: true,\r\n                                    labelString: 'Sentiment',\r\n                                  }\r\n                                }],\r\n                                yAxes: [{\r\n                                  display: true,\r\n                                  gridLines: {\r\n                                    display: true,\r\n                                    color: \"rgba(255, 255, 255, 0.5)\"\r\n                                  },\r\n                                  scaleLabel: {\r\n                                    display: true,\r\n                                    labelString: 'Value',\r\n                                  }\r\n                                }]\r\n                            }\r\n                        }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CompareMovieVisualisation"]},"metadata":{},"sourceType":"module"}