{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\Jaimi\\\\Desktop\\\\IN3007_Individual_Project\\\\movie-sentiment-app\\\\src\\\\components\\\\CompareMovieSelector.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Autosuggest } from 'react-autosuggest';\n\nclass CompareMovieSelector extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = (event, {\n      newValue\n    }) => {\n      this.setState({\n        value: newValue\n      });\n    };\n\n    this.onSuggestionsFetchRequested = ({\n      value\n    }) => {\n      this.setState({\n        suggestions: getSuggestions(value)\n      });\n    };\n\n    this.onSuggestionsClearRequested = () => {\n      this.setState({\n        suggestions: []\n      });\n    };\n\n    this.state = {\n      movie_entered: \"\",\n      movie_suggestions: [],\n      all_movies: []\n    };\n  }\n\n  getAllMovies() {\n    axios.get(\"http://localhost:5000/movieSentiment/findMovieSentiment\").then(apiResponse => {\n      this.setState({\n        all_movies: apiResponse.data\n      });\n      console.log(this.state.all_movies);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  componentDidMount() {\n    this.getAllMovies();\n  }\n\n  render() {\n    const _this$state = this.state,\n          value = _this$state.value,\n          suggestions = _this$state.suggestions;\n    const inputProps = {\n      placeholder: 'Enter A Movie',\n      value,\n      onChange: this.onChange\n    };\n    return React.createElement(Autosuggest, {\n      suggestions: suggestions,\n      onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\n      onSuggestionsClearRequested: this.onSuggestionsClearRequested,\n      getSuggestionValue: getSuggestionValue,\n      renderSuggestion: renderSuggestion,\n      inputProps: inputProps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default CompareMovieSelector;","map":{"version":3,"sources":["c:/Users/Jaimi/Desktop/IN3007_Individual_Project/movie-sentiment-app/src/components/CompareMovieSelector.js"],"names":["React","axios","Autosuggest","CompareMovieSelector","Component","constructor","props","onChange","event","newValue","setState","value","onSuggestionsFetchRequested","suggestions","getSuggestions","onSuggestionsClearRequested","state","movie_entered","movie_suggestions","all_movies","getAllMovies","get","then","apiResponse","data","console","log","catch","error","componentDidMount","render","inputProps","placeholder","getSuggestionValue","renderSuggestion"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,mBAA1B;;AAEA,MAAMC,oBAAN,SAAmCH,KAAK,CAACI,SAAzC,CAAmD;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA0BnBC,QA1BmB,GA0BR,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAyB;AAChC,WAAKC,QAAL,CAAc;AACVC,QAAAA,KAAK,EAAEF;AADG,OAAd;AAGH,KA9BkB;;AAAA,SAgCnBG,2BAhCmB,GAgCW,CAAC;AAAED,MAAAA;AAAF,KAAD,KAAe;AACzC,WAAKD,QAAL,CAAc;AACZG,QAAAA,WAAW,EAAEC,cAAc,CAACH,KAAD;AADf,OAAd;AAGH,KApCkB;;AAAA,SAsCnBI,2BAtCmB,GAsCW,MAAM;AAChC,WAAKL,QAAL,CAAc;AACZG,QAAAA,WAAW,EAAE;AADD,OAAd;AAGH,KA1CkB;;AAEf,SAAKG,KAAL,GAAa;AACTC,MAAAA,aAAa,EAAG,EADP;AAETC,MAAAA,iBAAiB,EAAG,EAFX;AAGTC,MAAAA,UAAU,EAAG;AAHJ,KAAb;AAKH;;AAEDC,EAAAA,YAAY,GAAG;AACXnB,IAAAA,KAAK,CAACoB,GAAN,CAAU,yDAAV,EACCC,IADD,CACMC,WAAW,IAAI;AACjB,WAAKb,QAAL,CAAc;AACVS,QAAAA,UAAU,EAAGI,WAAW,CAACC;AADf,OAAd;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWG,UAAvB;AACH,KAND,EAOCQ,KAPD,CAOOC,KAAK,IAAI;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,KATD;AAUH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKT,YAAL;AACH;;AAoBDU,EAAAA,MAAM,GAAG;AAAA,wBAC0B,KAAKd,KAD/B;AAAA,UACGL,KADH,eACGA,KADH;AAAA,UACUE,WADV,eACUA,WADV;AAGL,UAAMkB,UAAU,GAAG;AACjBC,MAAAA,WAAW,EAAE,eADI;AAEjBrB,MAAAA,KAFiB;AAGjBJ,MAAAA,QAAQ,EAAE,KAAKA;AAHE,KAAnB;AAMA,WACE,oBAAC,WAAD;AACE,MAAA,WAAW,EAAEM,WADf;AAEE,MAAA,2BAA2B,EAAE,KAAKD,2BAFpC;AAGE,MAAA,2BAA2B,EAAE,KAAKG,2BAHpC;AAIE,MAAA,kBAAkB,EAAEkB,kBAJtB;AAKE,MAAA,gBAAgB,EAAEC,gBALpB;AAME,MAAA,UAAU,EAAEH,UANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUH;;AAhE8C;;AAmEnD,eAAe5B,oBAAf","sourcesContent":["import React from 'react';\r\nimport axios from 'axios'\r\nimport {Autosuggest} from 'react-autosuggest'\r\n\r\nclass CompareMovieSelector extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            movie_entered : \"\",\r\n            movie_suggestions : [],\r\n            all_movies : []\r\n        }\r\n    }\r\n\r\n    getAllMovies() {\r\n        axios.get(\"http://localhost:5000/movieSentiment/findMovieSentiment\")\r\n        .then(apiResponse => {\r\n            this.setState({\r\n                all_movies : apiResponse.data\r\n            })\r\n            console.log(this.state.all_movies)\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllMovies()\r\n    }\r\n\r\n    onChange = (event, { newValue }) => {\r\n        this.setState({\r\n            value: newValue\r\n        });\r\n    };\r\n\r\n    onSuggestionsFetchRequested = ({ value }) => {\r\n        this.setState({\r\n          suggestions: getSuggestions(value)\r\n        });\r\n    };\r\n    \r\n    onSuggestionsClearRequested = () => {\r\n        this.setState({\r\n          suggestions: []\r\n        });\r\n    };\r\n    \r\n    render() {\r\n        const { value, suggestions } = this.state;\r\n    \r\n        const inputProps = {\r\n          placeholder: 'Enter A Movie',\r\n          value,\r\n          onChange: this.onChange\r\n        };\r\n    \r\n        return (\r\n          <Autosuggest\r\n            suggestions={suggestions}\r\n            onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n            onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n            getSuggestionValue={getSuggestionValue}\r\n            renderSuggestion={renderSuggestion}\r\n            inputProps={inputProps}\r\n          />\r\n        );\r\n    }\r\n}\r\n\r\nexport default CompareMovieSelector;"]},"metadata":{},"sourceType":"module"}