{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\Jaimi\\\\Desktop\\\\IN3007_Individual_Project\\\\movie-sentiment-app\\\\src\\\\components\\\\MovieVisualisation.js\";\nimport React from 'react';\nimport axios from 'axios';\n\nclass MovieVisualisation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie_found: false,\n      movie_id: '',\n      movie_name: this.props.movieName,\n      movie_overview: '',\n      movie_release_date: '',\n      positive_comments: '',\n      negative_comments: '',\n      neutral_comments: '',\n      see_or_skip: '',\n      date_analysed: ''\n    };\n  }\n\n  getMovieInformation(movieName) {\n    axios.get(\"https://api.themoviedb.org/3/search/movie\", {\n      params: {\n        api_key: '146fa0756d99220f8811aceb8a865301',\n        language: 'en-US',\n        query: movieName,\n        page: '1',\n        include_adult: 'false'\n      }\n    }).then(apiResponse => this.setState({\n      movie_id: apiResponse.data.results[0].id,\n      movie_name: apiResponse.data.results[0].title,\n      movie_overview: apiResponse.data.results[0].overview,\n      movie_release_date: apiResponse.data.results[0].release_date\n    })).catch(error => {\n      console.log(error);\n    });\n  }\n\n  checkIfMovieAnalysed(movie_id) {\n    const endpoint = \"http://localhost:5000/movieSentiment/findMovieSentiment/\";\n    const url = endpoint.concat(movie_id);\n    console.log(movie_id);\n    axios.get(\"http://localhost:5000/movieSentiment/findMovieSentiment/\" + movie_id).then(apiResponse => {\n      console.log(apiResponse);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n  /*\r\n  checkIfMovieAnalysed(movie_id) {\r\n    axios.get(\"http://localhost:5000/movieSentiment/findMovieSentiment/\" + movie_id)\r\n    .then(apiResponse => this.setState({\r\n      movie_found : true,\r\n      positive_comments: apiResponse.data.positive_comments,\r\n      negative_comments: apiResponse.data.negative_comments,\r\n      neutral_comments: apiResponse.data.neutral_comments,\r\n      see_or_skip: apiResponse.data.see_or_skip,\r\n      date_analysed: apiResponse.data.date_analysed\r\n    }))\r\n    .catch(error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n  */\n\n\n  componentDidMount() {\n    this.getMovieInformation(this.state.movie_name);\n    this.checkIfMovieAnalysed(this.state.movie_id);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"This is what people think about:\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.state.movie_name), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.state.movie_overview), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Release Date: \", this.state.movie_release_date), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Positive Comments: \", this.state.positive_comments), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Negative Comments: \", this.state.negative_comments), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Neutral Comments: \", this.state.neutral_comments), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.state.see_or_skip));\n  }\n\n}\n\nexport default MovieVisualisation;","map":{"version":3,"sources":["c:/Users/Jaimi/Desktop/IN3007_Individual_Project/movie-sentiment-app/src/components/MovieVisualisation.js"],"names":["React","axios","MovieVisualisation","Component","constructor","props","state","movie_found","movie_id","movie_name","movieName","movie_overview","movie_release_date","positive_comments","negative_comments","neutral_comments","see_or_skip","date_analysed","getMovieInformation","get","params","api_key","language","query","page","include_adult","then","apiResponse","setState","data","results","id","title","overview","release_date","catch","error","console","log","checkIfMovieAnalysed","endpoint","url","concat","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,kBAAN,SAAiCF,KAAK,CAACG,SAAvC,CAAiD;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,WAAW,EAAE,KADD;AAEZC,MAAAA,QAAQ,EAAE,EAFE;AAGZC,MAAAA,UAAU,EAAG,KAAKJ,KAAL,CAAWK,SAHZ;AAIZC,MAAAA,cAAc,EAAG,EAJL;AAKZC,MAAAA,kBAAkB,EAAG,EALT;AAMZC,MAAAA,iBAAiB,EAAE,EANP;AAOZC,MAAAA,iBAAiB,EAAE,EAPP;AAQZC,MAAAA,gBAAgB,EAAE,EARN;AASZC,MAAAA,WAAW,EAAE,EATD;AAUZC,MAAAA,aAAa,EAAE;AAVH,KAAb;AAYD;;AAEAC,EAAAA,mBAAmB,CAACR,SAAD,EAAY;AAC7BT,IAAAA,KAAK,CAACkB,GAAN,CAAU,2CAAV,EAAuD;AACtDC,MAAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAG,kCADJ;AAENC,QAAAA,QAAQ,EAAG,OAFL;AAGNC,QAAAA,KAAK,EAAGb,SAHF;AAINc,QAAAA,IAAI,EAAG,GAJD;AAKNC,QAAAA,aAAa,EAAG;AALV;AAD8C,KAAvD,EAQEC,IARF,CAQOC,WAAW,IAAI,KAAKC,QAAL,CAAc;AACnCpB,MAAAA,QAAQ,EAAGmB,WAAW,CAACE,IAAZ,CAAiBC,OAAjB,CAAyB,CAAzB,EAA4BC,EADJ;AAEnCtB,MAAAA,UAAU,EAAGkB,WAAW,CAACE,IAAZ,CAAiBC,OAAjB,CAAyB,CAAzB,EAA4BE,KAFN;AAGnCrB,MAAAA,cAAc,EAAGgB,WAAW,CAACE,IAAZ,CAAiBC,OAAjB,CAAyB,CAAzB,EAA4BG,QAHV;AAInCrB,MAAAA,kBAAkB,EAAGe,WAAW,CAACE,IAAZ,CAAiBC,OAAjB,CAAyB,CAAzB,EAA4BI;AAJd,KAAd,CARtB,EAcAC,KAdA,CAcMC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAhBA;AAiBD;;AAEDG,EAAAA,oBAAoB,CAAC/B,QAAD,EAAW;AAC7B,UAAMgC,QAAQ,GAAG,0DAAjB;AACA,UAAMC,GAAG,GAAGD,QAAQ,CAACE,MAAT,CAAgBlC,QAAhB,CAAZ;AACA6B,IAAAA,OAAO,CAACC,GAAR,CAAY9B,QAAZ;AACAP,IAAAA,KAAK,CAACkB,GAAN,CAAU,6DAA6DX,QAAvE,EACCkB,IADD,CACMC,WAAW,IAAI;AACnBU,MAAAA,OAAO,CAACC,GAAR,CAAYX,WAAZ;AACD,KAHD,EAICQ,KAJD,CAIOC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAND;AAOD;AAED;;;;;;;;;;;;;;;;;;AAiBAO,EAAAA,iBAAiB,GAAG;AAClB,SAAKzB,mBAAL,CAAyB,KAAKZ,KAAL,CAAWG,UAApC;AACA,SAAK8B,oBAAL,CAA0B,KAAKjC,KAAL,CAAWE,QAArC;AACD;;AAEFoC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKtC,KAAL,CAAWG,UAAhB,CAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKH,KAAL,CAAWK,cAAhB,CAHD,EAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAmB,KAAKL,KAAL,CAAWM,kBAA9B,CAJD,EAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAwB,KAAKN,KAAL,CAAWO,iBAAnC,CALD,EAMC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAwB,KAAKP,KAAL,CAAWQ,iBAAnC,CAND,EAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAuB,KAAKR,KAAL,CAAWS,gBAAlC,CAPD,EAQC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKT,KAAL,CAAWU,WAAhB,CARD,CADF;AAYD;;AArF6C;;AAwFjD,eAAed,kBAAf","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass MovieVisualisation extends React.Component {\r\n   constructor(props) {\r\n     super(props)\r\n     this.state = {\r\n      movie_found: false,\r\n      movie_id: '',\r\n      movie_name : this.props.movieName,\r\n      movie_overview : '',\r\n      movie_release_date : '',\r\n      positive_comments: '',\r\n      negative_comments: '',\r\n      neutral_comments: '',\r\n      see_or_skip: '',\r\n      date_analysed: ''\r\n     }\r\n   }\r\n\r\n    getMovieInformation(movieName) {\r\n      axios.get(\"https://api.themoviedb.org/3/search/movie\", {\r\n       params: {\r\n         api_key : '146fa0756d99220f8811aceb8a865301',\r\n         language : 'en-US',\r\n         query : movieName,\r\n         page : '1',\r\n         include_adult : 'false' \r\n       }\r\n     }).then(apiResponse => this.setState({\r\n       movie_id : apiResponse.data.results[0].id,\r\n       movie_name : apiResponse.data.results[0].title,\r\n       movie_overview : apiResponse.data.results[0].overview,\r\n       movie_release_date : apiResponse.data.results[0].release_date\r\n     }))\r\n     .catch(error => {\r\n       console.log(error)\r\n     })\r\n    }\r\n\r\n    checkIfMovieAnalysed(movie_id) {\r\n      const endpoint = \"http://localhost:5000/movieSentiment/findMovieSentiment/\"\r\n      const url = endpoint.concat(movie_id)\r\n      console.log(movie_id)\r\n      axios.get(\"http://localhost:5000/movieSentiment/findMovieSentiment/\" + movie_id)\r\n      .then(apiResponse => {\r\n        console.log(apiResponse)\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n    }\r\n\r\n    /*\r\n    checkIfMovieAnalysed(movie_id) {\r\n      axios.get(\"http://localhost:5000/movieSentiment/findMovieSentiment/\" + movie_id)\r\n      .then(apiResponse => this.setState({\r\n        movie_found : true,\r\n        positive_comments: apiResponse.data.positive_comments,\r\n        negative_comments: apiResponse.data.negative_comments,\r\n        neutral_comments: apiResponse.data.neutral_comments,\r\n        see_or_skip: apiResponse.data.see_or_skip,\r\n        date_analysed: apiResponse.data.date_analysed\r\n      }))\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n    }\r\n    */\r\n\r\n    componentDidMount() {\r\n      this.getMovieInformation(this.state.movie_name)\r\n      this.checkIfMovieAnalysed(this.state.movie_id)\r\n    }\r\n\r\n   render() {\r\n     return (\r\n       <div>\r\n        <h1>This is what people think about:</h1>\r\n        <h2>{this.state.movie_name}</h2>\r\n        <h3>{this.state.movie_overview}</h3>\r\n        <h3>Release Date: {this.state.movie_release_date}</h3>\r\n        <h3>Positive Comments: {this.state.positive_comments}</h3>\r\n        <h3>Negative Comments: {this.state.negative_comments}</h3>\r\n        <h3>Neutral Comments: {this.state.neutral_comments}</h3>\r\n        <h3>{this.state.see_or_skip}</h3>\r\n       </div>\r\n     )\r\n   }\r\n}\r\n\r\nexport default MovieVisualisation;"]},"metadata":{},"sourceType":"module"}