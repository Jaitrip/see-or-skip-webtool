{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\Jaimi\\\\Desktop\\\\IN3007_Individual_Project\\\\movie-sentiment-app\\\\src\\\\components\\\\CompareMovieResults.js\";\nimport React from 'react';\nimport axios from 'axios';\n\nclass CompareMovieResults extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstMovieToCompare: {\n        movieId: \"\",\n        movieName: this.props.firstMovieToCompare,\n        movieOverview: \"\",\n        movieReleaseDate: \"\",\n        posterPath: '',\n        positiveComments: '',\n        negativeComments: '',\n        neutralComments: '',\n        seeOrSkip: ''\n      },\n      secondMovieToCompare: {\n        movieId: \"\",\n        movieName: this.props.secondMovieToCompare,\n        movieOverview: \"\",\n        movieReleaseDate: \"\",\n        posterPath: '',\n        positiveComments: '',\n        negativeComments: '',\n        neutralComments: '',\n        seeOrSkip: ''\n      }\n    };\n  }\n\n  getMovieInformation(movie) {\n    axios.get(\"https://api.themoviedb.org/3/search/movie\", {\n      params: {\n        api_key: '146fa0756d99220f8811aceb8a865301',\n        language: 'en-US',\n        query: movie.movieName,\n        page: '1',\n        include_adult: 'false'\n      }\n    }).then(apiResponse => {\n      console.log(apiResponse);\n      this.setState({\n        movie: {\n          movieId: apiResponse.date.results[0].id,\n          movieName: apiResponse.data.results[0].title,\n          moviOverview: apiResponse.data.results[0].overview,\n          movieReleaseDate: apiResponse.data.results[0].release_date,\n          poster_path: apiResponse.data.results[0].poster_path\n        }\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n  /*\r\n  checkIfMovieAnalysed(movie) {\r\n      axios.get(\"http://localhost:5000/movieSentiment/findMovieSentiment/\" + movie_id)\r\n      .then(apiResponse => {\r\n        if (apiResponse.data !== null) {\r\n          this.setState({\r\n            movie_found : true,\r\n            positive_comments: apiResponse.data.positive_comments,\r\n            negative_comments: apiResponse.data.negative_comments,\r\n            neutral_comments: apiResponse.data.neutral_comments,\r\n            see_or_skip: apiResponse.data.see_or_skip,\r\n            date_analysed: apiResponse.data.date_analysed\r\n          })\r\n        } else {\r\n          this.findMovieSentiment(this.state.movieName)\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n    }\r\n  */\n\n\n  componentDidMount() {\n    this.getMovieInformation(this.state.firstMovieToCompare);\n    this.getMovieInformation(this.state.secondMovieToCompare);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Movie Results\"));\n  }\n\n}\n\nexport default CompareMovieResults;","map":{"version":3,"sources":["c:/Users/Jaimi/Desktop/IN3007_Individual_Project/movie-sentiment-app/src/components/CompareMovieResults.js"],"names":["React","axios","CompareMovieResults","Component","constructor","props","state","firstMovieToCompare","movieId","movieName","movieOverview","movieReleaseDate","posterPath","positiveComments","negativeComments","neutralComments","seeOrSkip","secondMovieToCompare","getMovieInformation","movie","get","params","api_key","language","query","page","include_adult","then","apiResponse","console","log","setState","date","results","id","data","title","moviOverview","overview","release_date","poster_path","catch","error","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,mBAAN,SAAkCF,KAAK,CAACG,SAAxC,CAAkD;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,mBAAmB,EAAG;AAClBC,QAAAA,OAAO,EAAG,EADQ;AAElBC,QAAAA,SAAS,EAAG,KAAKJ,KAAL,CAAWE,mBAFL;AAGlBG,QAAAA,aAAa,EAAG,EAHE;AAIlBC,QAAAA,gBAAgB,EAAG,EAJD;AAKlBC,QAAAA,UAAU,EAAG,EALK;AAMlBC,QAAAA,gBAAgB,EAAE,EANA;AAOlBC,QAAAA,gBAAgB,EAAE,EAPA;AAQlBC,QAAAA,eAAe,EAAE,EARC;AASlBC,QAAAA,SAAS,EAAE;AATO,OADb;AAaTC,MAAAA,oBAAoB,EAAG;AACnBT,QAAAA,OAAO,EAAG,EADS;AAEnBC,QAAAA,SAAS,EAAG,KAAKJ,KAAL,CAAWY,oBAFJ;AAGnBP,QAAAA,aAAa,EAAG,EAHG;AAInBC,QAAAA,gBAAgB,EAAG,EAJA;AAKnBC,QAAAA,UAAU,EAAG,EALM;AAMnBC,QAAAA,gBAAgB,EAAE,EANC;AAOnBC,QAAAA,gBAAgB,EAAE,EAPC;AAQnBC,QAAAA,eAAe,EAAE,EARE;AASnBC,QAAAA,SAAS,EAAE;AATQ;AAbd,KAAb;AAyBH;;AAEDE,EAAAA,mBAAmB,CAACC,KAAD,EAAQ;AACvBlB,IAAAA,KAAK,CAACmB,GAAN,CAAU,2CAAV,EAAuD;AACnDC,MAAAA,MAAM,EAAE;AACJC,QAAAA,OAAO,EAAG,kCADN;AAEJC,QAAAA,QAAQ,EAAG,OAFP;AAGJC,QAAAA,KAAK,EAAGL,KAAK,CAACV,SAHV;AAIJgB,QAAAA,IAAI,EAAG,GAJH;AAKJC,QAAAA,aAAa,EAAG;AALZ;AAD2C,KAAvD,EASCC,IATD,CASMC,WAAW,IAAI;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACA,WAAKG,QAAL,CAAc;AACVZ,QAAAA,KAAK,EAAG;AACJX,UAAAA,OAAO,EAAGoB,WAAW,CAACI,IAAZ,CAAiBC,OAAjB,CAAyB,CAAzB,EAA4BC,EADlC;AAEJzB,UAAAA,SAAS,EAAGmB,WAAW,CAACO,IAAZ,CAAiBF,OAAjB,CAAyB,CAAzB,EAA4BG,KAFpC;AAGJC,UAAAA,YAAY,EAAGT,WAAW,CAACO,IAAZ,CAAiBF,OAAjB,CAAyB,CAAzB,EAA4BK,QAHvC;AAIJ3B,UAAAA,gBAAgB,EAAGiB,WAAW,CAACO,IAAZ,CAAiBF,OAAjB,CAAyB,CAAzB,EAA4BM,YAJ3C;AAKJC,UAAAA,WAAW,EAAGZ,WAAW,CAACO,IAAZ,CAAiBF,OAAjB,CAAyB,CAAzB,EAA4BO;AALtC;AADE,OAAd;AASH,KApBD,EAqBCC,KArBD,CAqBOC,KAAK,IAAI;AACZb,MAAAA,OAAO,CAACC,GAAR,CAAYY,KAAZ;AACH,KAvBD;AAwBH;AAED;;;;;;;;;;;;;;;;;;;;;;;;AAuBAC,EAAAA,iBAAiB,GAAG;AAChB,SAAKzB,mBAAL,CAAyB,KAAKZ,KAAL,CAAWC,mBAApC;AACA,SAAKW,mBAAL,CAAyB,KAAKZ,KAAL,CAAWW,oBAApC;AACH;;AAED2B,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CADJ;AAKH;;AA3F6C;;AA8FlD,eAAe1C,mBAAf","sourcesContent":["import React from 'react'\r\nimport axios from 'axios'\r\n\r\nclass CompareMovieResults extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            firstMovieToCompare : {\r\n                movieId : \"\",\r\n                movieName : this.props.firstMovieToCompare,\r\n                movieOverview : \"\",\r\n                movieReleaseDate : \"\",\r\n                posterPath : '',\r\n                positiveComments: '',\r\n                negativeComments: '',\r\n                neutralComments: '',\r\n                seeOrSkip: '',\r\n            },\r\n\r\n            secondMovieToCompare : {\r\n                movieId : \"\",\r\n                movieName : this.props.secondMovieToCompare,\r\n                movieOverview : \"\",\r\n                movieReleaseDate : \"\",\r\n                posterPath : '',\r\n                positiveComments: '',\r\n                negativeComments: '',\r\n                neutralComments: '',\r\n                seeOrSkip: '',\r\n            }\r\n        }\r\n    }\r\n\r\n    getMovieInformation(movie) {\r\n        axios.get(\"https://api.themoviedb.org/3/search/movie\", {\r\n            params: {\r\n                api_key : '146fa0756d99220f8811aceb8a865301',\r\n                language : 'en-US',\r\n                query : movie.movieName,\r\n                page : '1',\r\n                include_adult : 'false' \r\n            }\r\n        })\r\n        .then(apiResponse => {\r\n            console.log(apiResponse)\r\n            this.setState({\r\n                movie : {\r\n                    movieId : apiResponse.date.results[0].id,\r\n                    movieName : apiResponse.data.results[0].title,\r\n                    moviOverview : apiResponse.data.results[0].overview,\r\n                    movieReleaseDate : apiResponse.data.results[0].release_date,\r\n                    poster_path : apiResponse.data.results[0].poster_path\r\n                }\r\n            })\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    /*\r\n    checkIfMovieAnalysed(movie) {\r\n        axios.get(\"http://localhost:5000/movieSentiment/findMovieSentiment/\" + movie_id)\r\n        .then(apiResponse => {\r\n          if (apiResponse.data !== null) {\r\n            this.setState({\r\n              movie_found : true,\r\n              positive_comments: apiResponse.data.positive_comments,\r\n              negative_comments: apiResponse.data.negative_comments,\r\n              neutral_comments: apiResponse.data.neutral_comments,\r\n              see_or_skip: apiResponse.data.see_or_skip,\r\n              date_analysed: apiResponse.data.date_analysed\r\n            })\r\n          } else {\r\n            this.findMovieSentiment(this.state.movieName)\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n        })\r\n      }\r\n    */ \r\n\r\n    componentDidMount() {\r\n        this.getMovieInformation(this.state.firstMovieToCompare) \r\n        this.getMovieInformation(this.state.secondMovieToCompare)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Movie Results</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CompareMovieResults;"]},"metadata":{},"sourceType":"module"}