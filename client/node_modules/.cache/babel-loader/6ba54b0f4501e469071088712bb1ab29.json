{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\Jaimi\\\\Desktop\\\\IN3007_Individual_Project\\\\movie-sentiment-app\\\\src\\\\components\\\\CompareMovieSelector.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Autosuggest from 'react-autosuggest';\n\nclass CompareMovieSelector extends React.Component {\n  constructor() {\n    super();\n\n    this.getSuggestions = value => {\n      const inputValue = value.toString().trim().toLowerCase();\n      const inputLength = inputValue.length;\n      return inputLength === 0 ? [] : this.state.all_movies.filter(lang => lang.movie_title.toLowerCase().slice(0, inputLength) === inputValue);\n    };\n\n    this.state = {\n      movie_entered: \"\",\n      movie_suggestions: [],\n      all_movies: []\n    };\n  }\n\n  getAllMovies() {\n    axios.get(\"http://localhost:5000/movieSentiment/findMovieSentiment\").then(apiResponse => {\n      this.setState({\n        all_movies: apiResponse.data\n      });\n      console.log(this.state.all_movies);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  componentDidMount() {\n    this.getAllMovies();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"input-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"movie_suggestion\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Movie Title\"), React.createElement(Autosuggest, {\n      inputProps: {\n        placeholder: \"Enter a movie\",\n        autoComplete: \"abcd\",\n        name: \"movie_suggestion\",\n        id: \"movie_suggestion\",\n        value: this.state.movie_entered,\n        onChange: (event, {\n          newValue\n        }) => {\n          this.setState({\n            movie_entered: newValue\n          });\n        }\n      },\n      suggestions: this.state.movie_suggestions,\n      onSuggestionsFetchRequested: ({\n        value\n      }) => {\n        this.setState({\n          movie_suggestions: this.getSuggestions(value)\n        });\n      },\n      onSuggestionsClearRequested: () => {\n        this.setState({\n          movie_suggestions: []\n        });\n      },\n      getSuggestionValue: suggestion => suggestion.movie_title,\n      renderSuggestion: suggestion => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, suggestion.movie_title),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default CompareMovieSelector;","map":{"version":3,"sources":["c:/Users/Jaimi/Desktop/IN3007_Individual_Project/movie-sentiment-app/src/components/CompareMovieSelector.js"],"names":["React","axios","Autosuggest","CompareMovieSelector","Component","constructor","getSuggestions","value","inputValue","toString","trim","toLowerCase","inputLength","length","state","all_movies","filter","lang","movie_title","slice","movie_entered","movie_suggestions","getAllMovies","get","then","apiResponse","setState","data","console","log","catch","error","componentDidMount","render","placeholder","autoComplete","name","id","onChange","event","newValue","suggestion"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;;AAEA,MAAMC,oBAAN,SAAmCH,KAAK,CAACI,SAAzC,CAAmD;AAC/CC,EAAAA,WAAW,GAAG;AACV;;AADU,SA0BdC,cA1Bc,GA0BGC,KAAK,IAAI;AACtB,YAAMC,UAAU,GAAGD,KAAK,CAACE,QAAN,GAAiBC,IAAjB,GAAwBC,WAAxB,EAAnB;AACA,YAAMC,WAAW,GAAGJ,UAAU,CAACK,MAA/B;AAEA,aAAOD,WAAW,KAAK,CAAhB,GAAoB,EAApB,GAAyB,KAAKE,KAAL,CAAWC,UAAX,CAAsBC,MAAtB,CAA6BC,IAAI,IAC/DA,IAAI,CAACC,WAAL,CAAiBP,WAAjB,GAA+BQ,KAA/B,CAAqC,CAArC,EAAwCP,WAAxC,MAAyDJ,UAD3B,CAAhC;AAGH,KAjCa;;AAEV,SAAKM,KAAL,GAAa;AACTM,MAAAA,aAAa,EAAG,EADP;AAETC,MAAAA,iBAAiB,EAAG,EAFX;AAGTN,MAAAA,UAAU,EAAG;AAHJ,KAAb;AAKH;;AAEDO,EAAAA,YAAY,GAAG;AACXrB,IAAAA,KAAK,CAACsB,GAAN,CAAU,yDAAV,EACCC,IADD,CACMC,WAAW,IAAI;AACjB,WAAKC,QAAL,CAAc;AACVX,QAAAA,UAAU,EAAGU,WAAW,CAACE;AADf,OAAd;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWC,UAAvB;AACH,KAND,EAOCe,KAPD,CAOOC,KAAK,IAAI;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,KATD;AAUH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKV,YAAL;AACH;;AAWDW,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,oBAAC,WAAD;AACI,MAAA,UAAU,EAAE;AACRC,QAAAA,WAAW,EAAE,eADL;AAERC,QAAAA,YAAY,EAAE,MAFN;AAGRC,QAAAA,IAAI,EAAG,kBAHC;AAIRC,QAAAA,EAAE,EAAG,kBAJG;AAKR9B,QAAAA,KAAK,EAAG,KAAKO,KAAL,CAAWM,aALX;AAMRkB,QAAAA,QAAQ,EAAE,CAACC,KAAD,EAAQ;AAACC,UAAAA;AAAD,SAAR,KAAuB;AAC7B,eAAKd,QAAL,CAAc;AACVN,YAAAA,aAAa,EAAEoB;AADL,WAAd;AAGH;AAVO,OADhB;AAaI,MAAA,WAAW,EAAE,KAAK1B,KAAL,CAAWO,iBAb5B;AAcI,MAAA,2BAA2B,EAAG,CAAC;AAACd,QAAAA;AAAD,OAAD,KAAa;AACnC,aAAKmB,QAAL,CAAc;AACVL,UAAAA,iBAAiB,EAAG,KAAKf,cAAL,CAAoBC,KAApB;AADV,SAAd;AAGH,OAlBT;AAoBI,MAAA,2BAA2B,EAAE,MAAO;AAChC,aAAKmB,QAAL,CAAc;AACVL,UAAAA,iBAAiB,EAAG;AADV,SAAd;AAGH,OAxBL;AAyBI,MAAA,kBAAkB,EAAEoB,UAAU,IAAIA,UAAU,CAACvB,WAzBjD;AA0BI,MAAA,gBAAgB,EAAEuB,UAAU,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMA,UAAU,CAACvB,WAAjB,CA1BpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAiCH;;AAtE8C;;AAyEnD,eAAef,oBAAf","sourcesContent":["import React from 'react';\r\nimport axios from 'axios'\r\nimport Autosuggest from 'react-autosuggest'\r\n\r\nclass CompareMovieSelector extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            movie_entered : \"\",\r\n            movie_suggestions : [],\r\n            all_movies : []\r\n        }\r\n    }\r\n\r\n    getAllMovies() {\r\n        axios.get(\"http://localhost:5000/movieSentiment/findMovieSentiment\")\r\n        .then(apiResponse => {\r\n            this.setState({\r\n                all_movies : apiResponse.data\r\n            })\r\n            console.log(this.state.all_movies)\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllMovies()\r\n    }\r\n\r\n    getSuggestions = value => {\r\n        const inputValue = value.toString().trim().toLowerCase();\r\n        const inputLength = inputValue.length;\r\n      \r\n        return inputLength === 0 ? [] : this.state.all_movies.filter(lang =>\r\n          lang.movie_title.toLowerCase().slice(0, inputLength) === inputValue\r\n        );\r\n    };\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"input-row\">\r\n                <label htmlFor=\"movie_suggestion\">Movie Title</label>\r\n                <Autosuggest \r\n                    inputProps={{\r\n                        placeholder: \"Enter a movie\",\r\n                        autoComplete: \"abcd\",\r\n                        name : \"movie_suggestion\",\r\n                        id : \"movie_suggestion\",\r\n                        value : this.state.movie_entered,\r\n                        onChange: (event, {newValue}) => {\r\n                            this.setState({\r\n                                movie_entered: newValue\r\n                            })\r\n                        }\r\n                    }} \r\n                    suggestions={this.state.movie_suggestions}\r\n                    onSuggestionsFetchRequested={ ({value}) => {\r\n                            this.setState({\r\n                                movie_suggestions : this.getSuggestions(value)\r\n                            })\r\n                        }\r\n                    }\r\n                    onSuggestionsClearRequested={() =>  {\r\n                        this.setState({\r\n                            movie_suggestions : []\r\n                        })\r\n                    }}\r\n                    getSuggestionValue={suggestion => suggestion.movie_title}\r\n                    renderSuggestion={suggestion => <div>{suggestion.movie_title}</div>}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CompareMovieSelector;"]},"metadata":{},"sourceType":"module"}