{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jaimi\\\\Desktop\\\\IN3007_Individual_Project\\\\movie-sentiment-app\\\\src\\\\components\\\\comparePageComponents\\\\MovieInformation.js\";\nimport React from 'react';\nimport MoviePoster from '../MoviePoster.js';\nimport axios from 'axios';\nimport MovieTrailer from '../findSentimentPageComponents/MovieTrailer.js';\n\nclass MovieInformation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movieId: \"\",\n      movieName: this.props.movieName,\n      movieOverview: \"\",\n      movieReleaseDate: \"\",\n      twitterPositiveComments: '',\n      twitterNegativeComments: '',\n      twitterNeutralComments: '',\n      youtubePositiveComments: '',\n      youtubeNegativeComments: '',\n      youtubeNeutralComments: '',\n      seeOrSkip: '',\n      dateAnalysed: ''\n    };\n  }\n\n  getMovieInformation() {\n    axios.get(\"https://api.themoviedb.org/3/search/movie\", {\n      params: {\n        api_key: '146fa0756d99220f8811aceb8a865301',\n        language: 'en-US',\n        query: this.state.movieName,\n        page: '1',\n        include_adult: 'false'\n      }\n    }).then(apiResponse => {\n      const releaseDate = apiResponse.data.results[0].release_date.split(\"-\");\n      const formattedReleaseDate = releaseDate[2] + \"/\" + releaseDate[1] + \"/\" + releaseDate[0];\n      this.setState({\n        movieId: apiResponse.data.results[0].id,\n        movieName: apiResponse.data.results[0].title,\n        movieOverview: apiResponse.data.results[0].overview,\n        movieReleaseDate: formattedReleaseDate\n      });\n      this.getMovieSentiment();\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  getMovieSentiment() {\n    axios.get(\"http://localhost:5000/movieSentiment/findMovieSentiment/\" + this.state.movieId).then(apiResponse => {\n      if (apiResponse.data !== null) {\n        this.setState({\n          twitterPositiveComments: apiResponse.data.twitter_positive_comments,\n          twitterNegativeComments: apiResponse.data.twitter_negative_comments,\n          twitterNeutralComments: apiResponse.data.twitter_neutral_comments,\n          youtubePositiveComments: apiResponse.data.youtube_positive_comments,\n          youtubeNegativeComments: apiResponse.data.youtube_negative_comments,\n          youtubeNeutralComments: apiResponse.data.youtube_neutral_comments,\n          seeOrSkip: apiResponse.data.see_or_skip,\n          dateAnalysed: apiResponse.data.date_analysed\n        });\n      }\n\n      this.props.handler(this.state.movieId, this.state.twitterPositiveComments, this.state.twitterNegativeComments, this.state.twitterNeutralComments, this.state.youtubePositiveComments, this.state.youtubeNegativeComments, this.state.youtubeNeutralComments);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  componentDidMount() {\n    this.getMovieInformation();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movieArea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(MoviePoster, {\n      image_size: \"w185\",\n      movie_title: this.state.movieName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"movieInformation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.state.movieName), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.state.movieOverview), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Release Date: \", this.state.movieReleaseDate), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"See or Skip?: \", this.state.seeOrSkip))));\n  }\n\n}\n\nexport default MovieInformation;","map":{"version":3,"sources":["C:/Users/Jaimi/Desktop/IN3007_Individual_Project/movie-sentiment-app/src/components/comparePageComponents/MovieInformation.js"],"names":["React","MoviePoster","axios","MovieTrailer","MovieInformation","Component","constructor","props","state","movieId","movieName","movieOverview","movieReleaseDate","twitterPositiveComments","twitterNegativeComments","twitterNeutralComments","youtubePositiveComments","youtubeNegativeComments","youtubeNeutralComments","seeOrSkip","dateAnalysed","getMovieInformation","get","params","api_key","language","query","page","include_adult","then","apiResponse","releaseDate","data","results","release_date","split","formattedReleaseDate","setState","id","title","overview","getMovieSentiment","catch","error","console","log","twitter_positive_comments","twitter_negative_comments","twitter_neutral_comments","youtube_positive_comments","youtube_negative_comments","youtube_neutral_comments","see_or_skip","date_analysed","handler","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport MoviePoster from '../MoviePoster.js'\r\nimport axios from 'axios'\r\nimport MovieTrailer from '../findSentimentPageComponents/MovieTrailer.js'\r\n\r\nclass MovieInformation extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            movieId : \"\",\r\n            movieName : this.props.movieName,\r\n            movieOverview : \"\",\r\n            movieReleaseDate : \"\",\r\n            twitterPositiveComments: '',\r\n            twitterNegativeComments: '',\r\n            twitterNeutralComments: '',\r\n            youtubePositiveComments: '',\r\n            youtubeNegativeComments: '',\r\n            youtubeNeutralComments: '',\r\n            seeOrSkip: '',\r\n            dateAnalysed: ''\r\n        }\r\n    }\r\n\r\n    getMovieInformation() {\r\n        axios.get(\"https://api.themoviedb.org/3/search/movie\", {\r\n            params: {\r\n                api_key : '146fa0756d99220f8811aceb8a865301',\r\n                language : 'en-US',\r\n                query : this.state.movieName,\r\n                page : '1',\r\n                include_adult : 'false' \r\n            }\r\n        })\r\n        .then(apiResponse => {\r\n            const releaseDate = apiResponse.data.results[0].release_date.split(\"-\")\r\n            const formattedReleaseDate = releaseDate[2] + \"/\" + releaseDate[1] + \"/\" + releaseDate[0]\r\n\r\n            this.setState({\r\n                movieId : apiResponse.data.results[0].id,\r\n                movieName : apiResponse.data.results[0].title,\r\n                movieOverview : apiResponse.data.results[0].overview,\r\n                movieReleaseDate : formattedReleaseDate,\r\n            })\r\n            this.getMovieSentiment()\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    getMovieSentiment() {\r\n        axios.get(\"http://localhost:5000/movieSentiment/findMovieSentiment/\" + this.state.movieId)\r\n        .then(apiResponse => {\r\n            if (apiResponse.data !== null) {\r\n                this.setState({\r\n                    twitterPositiveComments: apiResponse.data.twitter_positive_comments,\r\n                    twitterNegativeComments: apiResponse.data.twitter_negative_comments,\r\n                    twitterNeutralComments: apiResponse.data.twitter_neutral_comments,\r\n                    youtubePositiveComments: apiResponse.data.youtube_positive_comments,\r\n                    youtubeNegativeComments: apiResponse.data.youtube_negative_comments,\r\n                    youtubeNeutralComments: apiResponse.data.youtube_neutral_comments,\r\n                    seeOrSkip: apiResponse.data.see_or_skip,\r\n                    dateAnalysed: apiResponse.data.date_analysed\r\n                })\r\n            }\r\n            this.props.handler(this.state.movieId, this.state.twitterPositiveComments, this.state.twitterNegativeComments, this.state.twitterNeutralComments, this.state.youtubePositiveComments, this.state.youtubeNegativeComments, this.state.youtubeNeutralComments) \r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getMovieInformation()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"movieArea\">\r\n                    <MoviePoster \r\n                        image_size={\"w185\"}\r\n                        movie_title={this.state.movieName}\r\n                    />\r\n                    <div className=\"movieInformation\">\r\n                        <h3>{this.state.movieName}</h3>\r\n                        <p>{this.state.movieOverview}</p>\r\n                        <p>Release Date: {this.state.movieReleaseDate}</p>\r\n                        <p>See or Skip?: {this.state.seeOrSkip}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovieInformation;"]},"metadata":{},"sourceType":"module"}