{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jaimi\\\\Desktop\\\\IN3007_Individual_Project\\\\movie-sentiment-app\\\\src\\\\components\\\\findSentimentPageComponents\\\\MovieVisualisation.js\";\nimport React from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nclass MovieVisualisation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      labels: [\"Positive\", \"Neutral\", \"Negative\"],\n      datasets: [{\n        label: \"Twitter Sentiment\",\n        data: this.props.twitter_sentiment,\n        backgroundColor: [\"#00acee\", \"#00acee\", \"#00acee\"],\n        borderWidth: 2,\n        borderColor: \"white\"\n      }, {\n        label: \"YouTube Sentiment\",\n        data: this.props.youtube_sentiment,\n        backgroundColor: [\"#de5246\", \"#de5246\", \"#de5246\"],\n        borderWidth: 2,\n        borderColor: \"white\"\n      }]\n    };\n  } // update dataset if props change\n\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      this.setState({\n        datasets: [{\n          label: \"Twitter Sentiment\",\n          data: this.props.twitter_sentiment,\n          backgroundColor: [\"#00acee\", \"#00acee\", \"#00acee\"],\n          borderWidth: 2,\n          borderColor: \"white\"\n        }, {\n          label: \"YouTube Sentiment\",\n          data: this.props.youtube_sentiment,\n          backgroundColor: [\"#de5246\", \"#de5246\", \"#de5246\"],\n          borderWidth: 2,\n          borderColor: \"white\"\n        }]\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Bar, {\n      data: {\n        labels: this.state.labels,\n        datasets: this.state.datasets\n      },\n      width: 700,\n      height: 400,\n      options: {\n        maintainAspectRatio: false,\n        title: {\n          display: true,\n          text: \"Sentiment Breakdown\",\n          fontColor: \"white\",\n          fontSize: 30\n        },\n        scales: {\n          xAxes: [{\n            display: true,\n            gridLines: {\n              display: true,\n              color: \"rgba(255, 255, 255, 0.5)\"\n            },\n            scaleLabel: {\n              display: true,\n              labelString: 'Sentiment'\n            }\n          }],\n          yAxes: [{\n            display: true,\n            gridLines: {\n              display: true,\n              color: \"rgba(255, 255, 255, 0.5)\"\n            },\n            scaleLabel: {\n              display: true,\n              labelString: 'Value'\n            }\n          }]\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default MovieVisualisation;","map":{"version":3,"sources":["C:/Users/Jaimi/Desktop/IN3007_Individual_Project/movie-sentiment-app/src/components/findSentimentPageComponents/MovieVisualisation.js"],"names":["React","Bar","MovieVisualisation","Component","constructor","props","state","labels","datasets","label","data","twitter_sentiment","backgroundColor","borderWidth","borderColor","youtube_sentiment","componentDidUpdate","prevProps","setState","render","maintainAspectRatio","title","display","text","fontColor","fontSize","scales","xAxes","gridLines","color","scaleLabel","labelString","yAxes"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\n\r\nclass MovieVisualisation extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            labels : [\"Positive\", \"Neutral\", \"Negative\"],\r\n            datasets : [\r\n                {\r\n                    label : \"Twitter Sentiment\",\r\n                    data : this.props.twitter_sentiment,\r\n                    backgroundColor : [\"#00acee\", \"#00acee\", \"#00acee\"],\r\n                    borderWidth : 2,\r\n                    borderColor : \"white\"\r\n                },\r\n\r\n                {\r\n                    label : \"YouTube Sentiment\",\r\n                    data : this.props.youtube_sentiment,\r\n                    backgroundColor : [\"#de5246\", \"#de5246\", \"#de5246\"],\r\n                    borderWidth : 2,\r\n                    borderColor : \"white\"\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    // update dataset if props change\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps !== this.props) {\r\n            this.setState({\r\n                datasets : [\r\n                    {\r\n                        label : \"Twitter Sentiment\",\r\n                        data : this.props.twitter_sentiment,\r\n                        backgroundColor : [\"#00acee\", \"#00acee\", \"#00acee\"],\r\n                        borderWidth : 2,\r\n                        borderColor : \"white\"\r\n                    },\r\n    \r\n                    {\r\n                        label : \"YouTube Sentiment\",\r\n                        data : this.props.youtube_sentiment,\r\n                        backgroundColor : [\"#de5246\", \"#de5246\", \"#de5246\"],\r\n                        borderWidth : 2,\r\n                        borderColor : \"white\"\r\n                    }\r\n                ]\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Bar\r\n                    data={{\r\n                        labels : this.state.labels,\r\n                        datasets : this.state.datasets\r\n                    }}\r\n                    width={700}\r\n                    height={400}\r\n                    options={{ \r\n                        maintainAspectRatio: false,\r\n                        title: {\r\n                            display: true,\r\n                            text: \"Sentiment Breakdown\",\r\n                            fontColor : \"white\",\r\n                            fontSize: 30\r\n                        },\r\n                        scales: {\r\n                            xAxes: [{\r\n                              display: true,\r\n                              gridLines: {\r\n                                display: true,\r\n                                color: \"rgba(255, 255, 255, 0.5)\"\r\n                              },\r\n                              scaleLabel: {\r\n                                display: true,\r\n                                labelString: 'Sentiment',\r\n                              }\r\n                            }],\r\n                            yAxes: [{\r\n                              display: true,\r\n                              gridLines: {\r\n                                display: true,\r\n                                color: \"rgba(255, 255, 255, 0.5)\"\r\n                              },\r\n                              scaleLabel: {\r\n                                display: true,\r\n                                labelString: 'Value',\r\n                              }\r\n                            }]\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        )   \r\n    }\r\n}\r\n\r\nexport default MovieVisualisation;"]},"metadata":{},"sourceType":"module"}