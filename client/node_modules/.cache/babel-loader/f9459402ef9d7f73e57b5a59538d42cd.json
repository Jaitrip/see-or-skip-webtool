{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\Jaimi\\\\Desktop\\\\IN3007_Individual_Project\\\\movie-sentiment-app\\\\src\\\\components\\\\CompareMovieSelector.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Autosuggest } from 'react-autosuggest';\n\nclass CompareMovieSelector extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = (event, {\n      movie_name,\n      method\n    }) => {\n      this.setState({\n        movie_entered: movie_name\n      });\n    };\n\n    this.onSuggestionsFetchRequested = ({\n      movie_name\n    }) => {\n      this.setState({\n        movie_suggestions: this.getMovieSuggestions(movie_name)\n      });\n    };\n\n    this.onSuggestionsClearRequested = () => {\n      this.setState({\n        movie_suggestions: []\n      });\n    };\n\n    this.state = {\n      movie_entered: \"\",\n      movie_suggestions: [],\n      all_movies: []\n    };\n  }\n\n  getAllMovies() {\n    axios.get(\"http://localhost:5000/movieSentiment/findMovieSentiment\").then(apiResponse => {\n      this.setState({\n        all_movies: apiResponse.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  getMovieSuggestions(movie_name) {\n    const cleanMovieName = movie_name.trim().replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n\n    if (cleanMovieName === '') {\n      return [];\n    }\n\n    const regex = new RegExp('^' + cleanMovieName, 'i');\n    return this.state.movie_suggestions.filter(suggestion => regex.test(suggestion.movie_name));\n  }\n\n  getMovieSuggestionTitle(suggestion) {\n    return suggestion.movie_name;\n  }\n\n  renderSuggestion(suggestion) {\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, suggestion.movie_name);\n  }\n\n  componentDidMount() {\n    this.getAllMovies();\n  }\n\n  render() {\n    const _this$state = this.state,\n          movie_name = _this$state.movie_name,\n          movie_suggestions = _this$state.movie_suggestions;\n    const inputProps = {\n      placeholder: \"Enter a movie\",\n      movie_name,\n      onChange: this.onChange\n    };\n    return React.createElement(Autosuggest, {\n      suggestions: movie_suggestions,\n      onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\n      onSuggestionsClearRequested: this.onSuggestionsClearRequested,\n      getSuggestionValue: this.getMovieSuggestionTitle,\n      renderSuggestion: this.renderSuggestion,\n      inputProps: inputProps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default CompareMovieSelector;","map":{"version":3,"sources":["c:/Users/Jaimi/Desktop/IN3007_Individual_Project/movie-sentiment-app/src/components/CompareMovieSelector.js"],"names":["React","axios","Autosuggest","CompareMovieSelector","Component","constructor","props","onChange","event","movie_name","method","setState","movie_entered","onSuggestionsFetchRequested","movie_suggestions","getMovieSuggestions","onSuggestionsClearRequested","state","all_movies","getAllMovies","get","then","apiResponse","data","catch","error","console","log","cleanMovieName","trim","replace","regex","RegExp","filter","suggestion","test","getMovieSuggestionTitle","renderSuggestion","componentDidMount","render","inputProps","placeholder"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios'\r\nimport {Autosuggest} from 'react-autosuggest'\r\n\r\nclass CompareMovieSelector extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            movie_entered : \"\",\r\n            movie_suggestions : [],\r\n            all_movies : []\r\n        }\r\n    }\r\n\r\n    getAllMovies() {\r\n        axios.get(\"http://localhost:5000/movieSentiment/findMovieSentiment\")\r\n        .then(apiResponse => {\r\n            this.setState({\r\n                all_movies : apiResponse.data\r\n            })\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n        \r\n    getMovieSuggestions(movie_name) {\r\n        const cleanMovieName = movie_name.trim().replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\r\n        if (cleanMovieName === '') {\r\n            return [];\r\n        }\r\n\r\n        const regex = new RegExp('^' + cleanMovieName, 'i')\r\n        return this.state.movie_suggestions.filter(suggestion => regex.test(suggestion.movie_name))\r\n    }\r\n    \r\n    getMovieSuggestionTitle(suggestion) {\r\n        return suggestion.movie_name\r\n    }\r\n    \r\n    renderSuggestion(suggestion) {\r\n        return (\r\n            <span>{suggestion.movie_name}</span>\r\n        )\r\n    }\r\n\r\n    onChange = (event, { movie_name, method }) => {\r\n        this.setState({\r\n          movie_entered : movie_name\r\n        })\r\n    }\r\n      \r\n    onSuggestionsFetchRequested = ({ movie_name }) => {\r\n        this.setState({\r\n            movie_suggestions: this.getMovieSuggestions(movie_name)\r\n        })\r\n    }\r\n\r\n    onSuggestionsClearRequested = () => {\r\n        this.setState({\r\n            movie_suggestions: []\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllMovies()\r\n    }\r\n\r\n    render() {\r\n        const { movie_name, movie_suggestions } = this.state\r\n        const inputProps = {\r\n            placeholder: \"Enter a movie\",\r\n            movie_name,\r\n            onChange: this.onChange\r\n        }\r\n\r\n        return (\r\n            <Autosuggest \r\n                suggestions={movie_suggestions}\r\n                onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n                onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n                getSuggestionValue={this.getMovieSuggestionTitle}\r\n                renderSuggestion={this.renderSuggestion}\r\n                inputProps={inputProps} \r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default CompareMovieSelector;"]},"metadata":{},"sourceType":"module"}